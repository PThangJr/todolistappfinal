{"version":3,"sources":["components/CountComplete.js","containers/CountCompleteContainer.js","components/Counts.js","containers/CountsContainer.js","components/Options.js","constants/ActionTypes.js","actions/actions.js","containers/OptionsContainer.js","components/TodoItem.js","containers/TodoItemContainer.js","components/TodoList.js","containers/TodoListContainer.js","App.js","reportWebVitals.js","reducers/dataTodos.js","reducers/statusAction.js","reducers/repairTodo.js","reducers/reducers.js","index.js"],"names":["CountComplete","nextProps","totalComplete","this","props","className","Component","CountCompleteContainer","dataTodos","filter","dataTodo","status","length","connect","state","Counts","count","index","progress","total","complete","Math","ceil","style","width","CountsContainer","Options","classStatusAction","statusAction","classAddAction","showOptions","showAdd","onChange","e","target","value","onSubmit","preventDefault","onReset","console","log","onHandleAdd","name","type","placeholder","onClick","autoFocus","DATA_TODOS","CHANGE_STATUS_ACTION","ADD_TODO","TOGGLE_STATUS","DELETE_TODO","REPAIR_TODO","UPDATE_TODO","changeStatusAction","Types","repairTodo","id","OptionsContainer","setState","trim","dispatch","actions","TodoItem","toggleStatus","onDeleteTodo","onRepairTodo","height","parentElement","indexOf","findTodosItemElem","clientHeight","onBack","onInputValue","scrollHeight","fieldName","onUpdateTodo","onEnter","charCode","renderItem","idRepairTodo","pointerEvents","stopPropagation","onKeyPress","TodoItemContainer","handleDeleteTodo","handleRepairTodo","todo","handleUpdateTodo","TodoList","renderTodosItem","map","TodoListContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","JSON","parse","localStorage","getItem","action","newState","newTodo","Date","now","push","setItem","stringify","stateToggleStatus","item","stateDel","stateUpdate","appReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d88e8ac4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CountComplete extends Component {\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.totalComplete) {\r\n            // this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { totalComplete } = this.props;\r\n        return (\r\n            <div className=\"count \">\r\n                <div className=\"count__content count--complete\">\r\n                    Đã hoàn thành:\r\n                    <span className=\"numb numb-complete\">\r\n                        {totalComplete}\r\n                    </span>\r\n                    <span className=\"bd border1\" />\r\n                    <span className=\"bd border2\" />\r\n                    <span className=\"bd border3\" />\r\n                    <span className=\"bd border4\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountComplete;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CountComplete from '../components/CountComplete';\r\n\r\nclass CountCompleteContainer extends Component {\r\n    totalComplete = () => {\r\n        const { dataTodos } = this.props;\r\n        return dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n    }\r\n    render() {\r\n        return (\r\n            <CountComplete totalComplete={this.totalComplete()} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n// export default CountCompleteContainer;\r\nexport default connect(mapStateToProps, null)(CountCompleteContainer);","import React, { Component } from 'react';\r\nimport CountCompleteContainer from '../containers/CountCompleteContainer';\r\n\r\nclass Counts extends Component {\r\n    count = (status) => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length <= 0) return;\r\n        if (status === true) {\r\n            return dataTodos.filter((dataTodo, index) => {\r\n                return dataTodo.status === true;\r\n            }).length\r\n        }\r\n        else if (status === false) {\r\n            return dataTodos.filter((dataTodo, index) => {\r\n                return dataTodo.status === false;\r\n            }).length;\r\n        }\r\n    }\r\n    progress = () => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length <= 0) return;\r\n        let total = dataTodos.length;\r\n        let complete = dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n        let notComplete = dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n        return Math.ceil((complete / total) * 100);\r\n    }\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n        return (\r\n            <div className=\"todos__footer\">\r\n                <div className=\"progress-bar\">\r\n                    <span className=\"progress-bar__name\">Tiến trình</span>\r\n                    <div className=\"progress-bar__percent\">\r\n                        <div className=\"percent\" style={{ width: this.progress() + '%' }}>{this.progress()}%</div>\r\n                    </div>\r\n                    <div className=\"progress-bar__value\">100%</div>\r\n                </div>\r\n                <div className=\"counts\">\r\n                    <div className=\"count \">\r\n                        <div className=\"count__content count--total\">\r\n                            Tổng cộng:\r\n        <span className=\"numb numb-total\">\r\n                                {\r\n                                    dataTodos.length\r\n                                }\r\n                            </span>\r\n                            <span className=\"bd border1\" />\r\n                            <span className=\"bd border2\" />\r\n                            <span className=\"bd border3\" />\r\n                            <span className=\"bd border4\" />\r\n                        </div>\r\n                    </div>\r\n                    <CountCompleteContainer />\r\n                    <div className=\"count\">\r\n                        <div className=\"count__content count--not-complete\">\r\n                            Chưa hoàn thành:\r\n                        <span className=\"numb numb-not-complete\">\r\n                                {\r\n                                    this.count(false) ? this.count(false) : 0\r\n                                }\r\n\r\n                            </span>\r\n                            <span className=\"bd border1\" />\r\n                            <span className=\"bd border2\" />\r\n                            <span className=\"bd border3\" />\r\n                            <span className=\"bd border4\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counts;","import React, { Component } from 'react';\r\nimport Counts from '../components/Counts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass CountsContainer extends Component {\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n        return (\r\n            <Counts dataTodos={dataTodos} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n\r\n// export default CountsContainer;\r\nexport default connect(mapStateToProps, null)(CountsContainer);\r\n","import React, { Component } from 'react';\r\n\r\nclass Options extends Component {\r\n\r\n\r\n    classStatusAction = () => {\r\n        const { statusAction } = this.props;\r\n        if (statusAction === null) {\r\n            return \"actions\"\r\n        }\r\n        else if (statusAction) {\r\n            return \"actions hide-actions\";\r\n        }\r\n        else if (statusAction === false) {\r\n            return \"actions show-actions\";\r\n        }\r\n    }\r\n    classAddAction = () => {\r\n        const { statusAction } = this.props;\r\n        if (statusAction === null) {\r\n            return \"add\"\r\n        }\r\n        else if (statusAction) {\r\n            return \"add show-add\";\r\n        }\r\n        else if (statusAction === false) {\r\n            return \"add hide-add\";\r\n        }\r\n    }\r\n    showOptions = () => { //Show Options Components\r\n        const { showOptions } = this.props;\r\n        showOptions();\r\n    }\r\n    showAdd = () => { //Show Add Component\r\n        const { showAdd } = this.props;\r\n        showAdd();\r\n    }\r\n    onChange = (e) => { //Bắt sự kiện onChange của ô thêm công việc\r\n        const { onChange } = this.props;\r\n        onChange(e.target.value);\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    onReset = () => {\r\n        console.log('reset')\r\n    }\r\n\r\n    render() {\r\n        const { onHandleAdd, name, onReset } = this.props;\r\n        return (\r\n            <div className=\"setting \">\r\n                <div className={this.classStatusAction()}>\r\n                    <h3 className=\"setting__header\">\r\n                        Chức năng\r\n    </h3>\r\n                    <div className=\"setting__body mb-10\">\r\n                        <div className=\"actions__input-box\">\r\n                            <input type=\"text\" className=\"actions__input\" placeholder=\"Tìm kiếm...\" />\r\n                            <span className=\"icon-reset\"\r\n                            >\r\n                                <i className=\"fas fa-eraser\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"actions__btn\">\r\n                            <button\r\n                                className=\"btn btn--back btn--add\"\r\n                                onClick={this.showAdd}\r\n                            >\r\n                                <i className=\"fas fa-plus-square\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"setting__menu\">\r\n                        <li className=\"setting__menu-item\">\r\n                            <button className=\"btn btn--sort\">\r\n                                <span className=\"btn-text\">\r\n                                    Sắp xếp\r\n          </span>\r\n                                <span className=\" icon-sort d-none\">\r\n                                    <i className=\"fas fa-sort\" />\r\n                                </span>\r\n                                <span className=\"icon-check icon-sort icon--complete \">\r\n                                    <i className=\"fas fa-check\" />\r\n                                </span>\r\n                                <span className=\"icon-check icon-sort icon--not-complete d-none\">\r\n                                    <i className=\"fas fa-times\" />\r\n                                </span>\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"setting__menu-item\">\r\n                            <button className=\"btn btn--mark-complete\">\r\n                                <div className=\"btn-text\">\r\n                                    Chọn tất cả\r\n          </div>\r\n                                <span className=\"icon-check icon-mark icon--complete \">\r\n                                    <i className=\"fas fa-check\" />\r\n                                </span>\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"setting__menu-item\">\r\n                            <button className=\"btn btn--mark-not-complete\">\r\n                                Chọn tất cả\r\n          <span className=\"icon-check icon-mark icon--not-complete\">\r\n                                    <i className=\"fas fa-times\" />\r\n                                </span>\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"setting__menu-item\">\r\n                            <button className=\"btn btn--delete-all\">\r\n                                Xóa tất cả\r\n          <span className=\"icon-check icon-delete-all\">\r\n                                    <i className=\"fas fa-trash\" />\r\n                                </span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className={this.classAddAction()}>\r\n                    <h3 className=\"setting__header\">\r\n                        Thêm công việc\r\n    </h3>\r\n                    <form\r\n                        className=\"setting__body\"\r\n                        onSubmit={this.onSubmit}\r\n                    >\r\n                        <div className=\"add__input-box\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"add__input\"\r\n                                placeholder=\"Thêm công việc...\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                autoFocus\r\n                            />\r\n                            <span className=\"icon-reset\"\r\n                                onClick={onReset}\r\n\r\n                            >\r\n                                <i className=\"fas fa-eraser\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"add__btn\">\r\n                            <button\r\n                                className=\"btn btn--glowing-gradient btn--add\"\r\n                                onClick={onHandleAdd}\r\n                            >\r\n                                <i className=\"fas fa-plus-circle\" />\r\n          Thêm\r\n        </button>\r\n                            <button\r\n                                className=\"btn btn--setting\"\r\n                                onClick={this.showOptions}\r\n                            >\r\n                                <i className=\"fas fa-cog\" />\r\n                            </button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","export const DATA_TODOS = 'DATA_TODOS';\r\nexport const CHANGE_STATUS_ACTION = 'CHANGE_STATUS_ACTION';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOTAL_COMPLETE = 'TOTAL_COMPLETE';\r\nexport const TOGGLE_STATUS = 'TOGGLE_STATUS';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const REPAIR_TODO = 'REPAIR_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\n\r\n","import * as Types from '../constants/ActionTypes';\r\nexport const dataTodos = () => {\r\n    return {\r\n        type: Types.DATA_TODOS\r\n\r\n    }\r\n}\r\nexport const changeStatusAction = (statusAction) => {\r\n    return {\r\n        type: Types.CHANGE_STATUS_ACTION,\r\n        statusAction\r\n    }\r\n}\r\nexport const addTodo = (name) => {\r\n    return {\r\n        type: Types.ADD_TODO,\r\n        name\r\n    }\r\n}\r\nexport const totalComplete = (status) => {\r\n    return {\r\n        type: Types.TOTAL_COMPLETE,\r\n        status\r\n    }\r\n}\r\nexport const toggleStatus = (id) => {\r\n    return {\r\n        type: Types.TOGGLE_STATUS,\r\n        id\r\n    }\r\n}\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: Types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\nexport const repairTodo = (id) => {\r\n    return {\r\n        type: Types.REPAIR_TODO,\r\n        id\r\n    }\r\n}\r\nexport const updateTodo = (todo) => {\r\n    return {\r\n        type: Types.UPDATE_TODO,\r\n        todo\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Options from '../components/Options';\r\nimport * as actions from '../actions/actions';\r\nclass OptionsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { statusAction } = this.props;\r\n        const { name } = this.state;\r\n        return (\r\n            <Options\r\n                statusAction={statusAction}\r\n                showOptions={this.showOptions}\r\n                showAdd={this.showAdd}\r\n                onChange={this.onChange}\r\n                onHandleAdd={this.onHandleAdd}\r\n                name={name}\r\n                onReset={this.onReset}\r\n            />\r\n        );\r\n    }\r\n    showOptions = () => {\r\n        const { showOptions } = this.props;\r\n        showOptions(false);\r\n    }\r\n    showAdd = () => {\r\n        const { showAdd } = this.props;\r\n        showAdd(true);\r\n    }\r\n    onChange = (value) => { // Lấy dữ liệu ô Input thêm công việc\r\n        // console.log(value);\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n    onReset = () => {\r\n        console.log('reset')\r\n        this.setState({\r\n            name: ''\r\n        })\r\n    }\r\n    onHandleAdd = () => {\r\n        const { onHandleAdd } = this.props;\r\n        const { name } = this.state;\r\n        if (name.trim() !== '') {\r\n            onHandleAdd(name);\r\n            this.onReset()\r\n        }\r\n        // console.log(this.state);\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        showOptions: (statusAction) => {\r\n            dispatch(actions.changeStatusAction(statusAction));\r\n        },\r\n        showAdd: (statusAction) => {\r\n            dispatch(actions.changeStatusAction(statusAction));\r\n        },\r\n        onHandleAdd: (name) => {\r\n            dispatch(actions.addTodo(name))\r\n        },\r\n\r\n    }\r\n}\r\n// export default OptionsContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OptionsContainer);\r\n","import React, { Component } from 'react';\r\n\r\nclass TodoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fieldName: '',\r\n            height: null,\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { dataTodo } = nextProps;\r\n        if (dataTodo) {\r\n            this.setState({\r\n                fieldName: dataTodo.name\r\n            })\r\n        }\r\n    }\r\n    toggleStatus = (id) => { //Bắt sự kiện click vào 1 Item để thay đổi trạng thái\r\n        const { toggleStatus } = this.props;\r\n        toggleStatus(id);\r\n    }\r\n    onDeleteTodo = (id) => { //Bắt sự kiện xóa 1 item\r\n        const { onDeleteTodo } = this.props;\r\n        onDeleteTodo(id);\r\n    }\r\n    onRepairTodo = (id, e) => { //Bắt sự kiện sửa 1 item có id trùng vs id truyền vào\r\n        const { onRepairTodo } = this.props;\r\n        const findTodosItemElem = () => {\r\n            var target = e.target;\r\n            while (target.parentElement) {\r\n                if (target.parentElement.className.indexOf('todos-item') !== -1) {\r\n                    return target.parentElement;\r\n                }\r\n                target = target.parentElement;\r\n            }\r\n        }\r\n        const height = findTodosItemElem().clientHeight + 5;\r\n        // console.log(height)\r\n        // console.log([findTodosItemElem()])\r\n        onRepairTodo(id);\r\n        this.setState({\r\n            height,\r\n        })\r\n        // console.log([e.target.parentElement.parentElement.parentElement.parentElement.parentElement.clientHeight])\r\n        // console.log(height);\r\n    }\r\n    onBack = () => {\r\n        const { onBack } = this.props;\r\n        onBack();\r\n    }\r\n    onInputValue = (e) => { //Lấy dữ liệu ô textarea ra set vào state\r\n        // console.log([e.target]);\r\n        let height = e.target.style.height\r\n        const scrollHeight = e.target.scrollHeight + 3\r\n        // console.log(height);\r\n        // console.log(scrollHeight);\r\n        this.setState({\r\n            fieldName: e.target.value,\r\n            height: scrollHeight\r\n        })\r\n    }\r\n    onUpdateTodo = (id) => {\r\n        const { onUpdateTodo } = this.props;\r\n        const { fieldName } = this.state;\r\n        onUpdateTodo({\r\n            id,\r\n            name: fieldName,\r\n        });\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        const { dataTodo, idRepairTodo } = this.props;\r\n        const { status } = dataTodo;\r\n        return (\r\n            <li className={status ? `todos-item mb-10 active-todos` : `todos-item mb-10`}>\r\n\r\n                {\r\n                    this.renderItem()\r\n                }\r\n            </li>\r\n        );\r\n    }\r\n    onEnter = (e) => {\r\n        if (e.charCode === 13) {\r\n            e.preventDefault();\r\n        }\r\n        let height = e.target.style.height\r\n        const scrollHeight = e.target.scrollHeight + 5\r\n        // console.log(height);\r\n        // console.log(scrollHeight);\r\n        this.setState({\r\n            fieldName: e.target.value,\r\n            height: scrollHeight\r\n        })\r\n\r\n    }\r\n\r\n    renderItem = () => { // Render ra Item\r\n        const { dataTodo, idRepairTodo } = this.props;\r\n        const { fieldName } = this.state;\r\n        const { id, name, status } = dataTodo;\r\n        // console.log(this.state.height)\r\n        if (idRepairTodo !== id) {\r\n            return (\r\n                <div className=\"todos-item-box\">\r\n                    <div\r\n                        className=\"todos__name \"\r\n                        onClick={() => this.toggleStatus(id)}\r\n                    >\r\n                        <span className={status ? \"icon-check icon--complete \" : \"icon-check icon--complete d-none\"}>\r\n                            <i className=\"fas fa-check\" />\r\n                        </span>\r\n                        <span className={!status ? \"icon-check icon--not-complete\" : \"icon-check icon--not-complete d-none\"}>\r\n                            <i className=\"fas fa-times\" />\r\n                        </span>\r\n                        <span className=\"todos__name-text\">\r\n                            {\r\n                                name\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"todos__options \">\r\n                        <span\r\n                            className={idRepairTodo === id ? \"icon-repair d-none\" : \"icon-repair\"}\r\n                            onClick={(e) => this.onRepairTodo(id, e)}\r\n                        >\r\n                            <i className=\"fas fa-edit\" style={{ pointerEvents: false }}\r\n                                onClick={this.stopPropagation}\r\n                            />\r\n                        </span>\r\n                        <span\r\n                            className={idRepairTodo === id ? \"icon-delete d-none\" : \"icon-delete \"}\r\n                            onClick={() => this.onDeleteTodo(id)}\r\n                        >\r\n                            <i className=\"fas fa-trash-alt\" />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (idRepairTodo === id) {\r\n            return (\r\n                <form\r\n                    className=\"todos-item-box\"\r\n                    onSubmit={this.onSubmit}\r\n                >\r\n                    <div className={idRepairTodo === id ? \"todos__name-repair \" : \"todos__name-repair d-none\"}>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            id=\"text-repair\"\r\n                            className=\"actions__input\"\r\n                            value={fieldName}\r\n                            onChange={this.onInputValue}\r\n                            onKeyPress={this.onEnter}\r\n                            style={{ height: this.state.height + 'px' }}\r\n                        />\r\n                    </div>\r\n                    <div className={idRepairTodo === id ? \"todos__options-repair \" : \"todos__options-repair  d-none\"}>\r\n                        <span\r\n                            className=\"icon-repair\"\r\n                            onClick={(e) => this.onUpdateTodo(id)}\r\n                        >\r\n                            <i className=\"fas fa-save\" />\r\n                        </span>\r\n                        <span\r\n                            className=\"icon-back\"\r\n                            onClick={() => this.onBack()}\r\n                        >\r\n                            <i className=\"fas fa-undo-alt\" />\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\n\r\nimport TodoItem from '../components/TodoItem';\r\nclass TodoItemContainer extends Component {\r\n    render() {\r\n        const { dataTodo, idRepairTodo } = this.props;\r\n        return (\r\n            <TodoItem\r\n                dataTodo={dataTodo}\r\n                toggleStatus={this.toggleStatus}\r\n                onDeleteTodo={this.onDeleteTodo}\r\n                onRepairTodo={this.onRepairTodo}\r\n                idRepairTodo={idRepairTodo}\r\n                onBack={this.onBack}\r\n                onUpdateTodo={this.onUpdateTodo}\r\n            />\r\n        );\r\n    }\r\n    toggleStatus = (id) => { //sự kiện thay đổi trạng thái hoàn thành hoặc chưa hoàn thành\r\n        const { toggleStatus } = this.props;\r\n        toggleStatus(id)\r\n    }\r\n    onDeleteTodo = (id) => { //Sự kiện xóa 1 todo item\r\n        const { handleDeleteTodo } = this.props;\r\n        handleDeleteTodo(id);\r\n    }\r\n    onRepairTodo = (id) => {\r\n        const { handleRepairTodo } = this.props;\r\n        handleRepairTodo(id);\r\n    }\r\n    onBack = () => {\r\n        const { onBack } = this.props;\r\n        onBack();\r\n    }\r\n    onUpdateTodo = (todo) => {\r\n        // console.log(todo)\r\n        const { handleUpdateTodo, onBack } = this.props;\r\n        if (todo.name.trim() !== '') {\r\n            handleUpdateTodo(todo);\r\n            onBack();\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction,\r\n        idRepairTodo: state.repairTodo\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        toggleStatus: (id) => {\r\n            dispatch(actions.toggleStatus(id));\r\n        },\r\n        handleDeleteTodo: (id) => {\r\n            dispatch(actions.deleteTodo(id));\r\n        },\r\n        handleRepairTodo: (id) => {\r\n            dispatch(actions.repairTodo(id));\r\n        },\r\n        onBack: () => {\r\n            dispatch(actions.repairTodo());\r\n        },\r\n        handleUpdateTodo: (todo) => {\r\n            dispatch(actions.updateTodo(todo));\r\n        }\r\n    }\r\n}\r\n// export default TodoItemContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoItemContainer from '../containers/TodoItemContainer';\r\n\r\nclass TodoList extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"todos__body mb-15\" >\r\n                <ul className=\"todos-list\">\r\n                    {\r\n                        this.renderTodosItem()\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    renderTodosItem = () => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length > 0) {\r\n            return dataTodos.map((dataTodo, index) => {\r\n                return (\r\n                    <TodoItemContainer\r\n                        key={dataTodo.id}\r\n                        dataTodo={dataTodo}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TodoList;\r\n\r\n{/* <li className=\"todos-item mb-10 active-todos\">\r\n                        <div className=\"todos__name d-none\">\r\n                            <span className=\"icon-check icon--complete \">\r\n                                <i className=\"fas fa-check\" />\r\n                            </span>\r\n                            <span className=\"icon-check icon--not-complete d-none\">\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                            <span className=\"todos__name-text\">\r\n                                Công việc 1\r\n                  </span>\r\n                            <input type=\"text\" name=\"fieldName\" className=\"todos__name-input d-none\" />\r\n                        </div>\r\n                        <div className=\"todos__options d-none\">\r\n                            <span className=\"icon-repair\">\r\n                                <i className=\"fas fa-edit\" />\r\n                            </span>\r\n                            <span className=\"icon-delete\">\r\n                                <i className=\"fas fa-trash-alt\" />\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"todos__name-repair \">\r\n                            <textarea type=\"text\" id=\"text-repair\" className=\"actions__input\" defaultValue={\"\"} />\r\n                        </div>\r\n                        <div className=\"todos__options-repair  \">\r\n                            <span className=\"icon-repair\">\r\n                                <i className=\"fas fa-save\" />\r\n                            </span>\r\n                            <span className=\"icon-back\">\r\n                                <i className=\"fas fa-undo-alt\" />\r\n                            </span>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"todos-item mb-10\">\r\n                        <div className=\"todos__name\">\r\n                            <span className=\"icon-check icon--complete d-none\">\r\n                                <i className=\"fas fa-check\" />\r\n                            </span>\r\n                            <span className=\"icon-check icon--not-complete \">\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                            <span className=\"todos__name-text\">\r\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit. Tempore perspiciatis hic ullam accusantium libero veniam saepe placeat rerum mollitia minus. Saepe, veniam. Atque nemo numquam molestias fugiat iure odit tempora!\r\n                  </span>\r\n                            <input type=\"text\" name=\"fieldName\" className=\"todos__name-input d-none\" />\r\n                        </div>\r\n                        <div className=\"todos__options\">\r\n                            <span className=\"icon-repair\">\r\n                                <i className=\"fas fa-edit\" />\r\n                            </span>\r\n                            <span className=\"icon-delete\">\r\n                                <i className=\"fas fa-trash-alt\" />\r\n                            </span>\r\n                        </div>\r\n                    </li> */}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoList from '../components/TodoList';\r\n\r\nclass TodoListContainer extends Component {\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n\r\n        return (\r\n            <TodoList\r\n                dataTodos={dataTodos}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n// export default TodoItemContainer;\r\nexport default connect(mapStateToProps, null)(TodoListContainer);\r\n// export default TodoListContainer;","import React, { Component } from 'react';\nimport CountsContainer from './containers/CountsContainer';\nimport OptionsContainer from './containers/OptionsContainer';\nimport TodoListContainer from './containers/TodoListContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"todos\">\n          <div className=\"todos__header\">\n            <h3 className=\"todos__header-text\">Todo List</h3>\n          </div>\n          <OptionsContainer />\n          <TodoListContainer />\n          <CountsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as Types from '../constants/ActionTypes';\r\nvar dataLocal = JSON.parse(localStorage.getItem('dataTodos'));\r\n\r\nvar initialState = dataLocal || [];\r\nvar dataTodos = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.DATA_TODOS:\r\n\r\n            return [...state];\r\n        case Types.ADD_TODO: //Thêm 1 công việc vào mảng\r\n            // console.log(action)\r\n            // state = false;\r\n            let newState = [...state];\r\n            const newTodo = {\r\n                id: Date.now(),\r\n                name: action.name,\r\n                status: false\r\n            }\r\n            newState.push(newTodo);\r\n            localStorage.setItem('dataTodos', JSON.stringify(newState));\r\n            return newState;\r\n        case Types.TOGGLE_STATUS:\r\n            let stateToggleStatus = [...state];\r\n            stateToggleStatus = stateToggleStatus.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        status: !item.status\r\n                    }\r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateToggleStatus));\r\n            return stateToggleStatus;\r\n        case Types.DELETE_TODO:\r\n            let stateDel = [...state];\r\n            stateDel = stateDel.filter(item => item.id !== action.id);\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateDel));\r\n            return stateDel;\r\n        case Types.UPDATE_TODO:\r\n            // console.log(action);\r\n            let stateUpdate = [...state];\r\n            stateUpdate = stateUpdate.map(item => {\r\n                if (item.id === action.todo.id) {\r\n                    return {\r\n                        ...item,\r\n                        name: action.todo.name\r\n                    }\r\n                }\r\n                else return item;\r\n            })\r\n            // console.log(stateUpdate)\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateUpdate));\r\n\r\n            return stateUpdate;\r\n        default: return state;\r\n    }\r\n}\r\nexport default dataTodos;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = null;\r\nvar statusAction = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.CHANGE_STATUS_ACTION:\r\n            // console.log(action)\r\n            // state = false;\r\n            return action.statusAction\r\n        default: return state;\r\n    }\r\n}\r\nexport default statusAction;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = null;\r\nvar statusAction = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.REPAIR_TODO:\r\n            // console.log(action)\r\n            // state = false;\r\n            if (action.id) {\r\n                return action.id;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\nexport default statusAction;","import { combineReducers } from 'redux';\r\nimport dataTodos from './dataTodos';\r\nimport statusAction from './statusAction';\r\nimport repairTodo from './repairTodo';\r\nvar appReducer = combineReducers({\r\n    dataTodos,\r\n    statusAction,\r\n    repairTodo\r\n})\r\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './reducers/reducers';\nconst store = createStore(appReducer);\nReactDOM.render(\n  <Provider store={store} >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}