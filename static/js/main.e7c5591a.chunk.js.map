{"version":3,"sources":["constants/ActionTypes.js","actions/actions.js","components/ActionTodo.js","containers/ActionTodoContainer.js","components/AddTodo.js","containers/AddTodoContainer.js","components/Options.js","components/CountComplete.js","containers/CountCompleteContainer.js","components/Counts.js","containers/CountsContainer.js","components/TodoItem.js","containers/TodoItemContainer.js","components/TodoList.js","containers/TodoListContainer.js","App.js","reportWebVitals.js","reducers/dataTodos.js","reducers/statusAction.js","reducers/repairTodo.js","reducers/search.js","reducers/sortTodo.js","reducers/reducers.js","index.js"],"names":["DATA_TODOS","CHANGE_STATUS_ACTION","ADD_TODO","TOGGLE_STATUS","DELETE_TODO","REPAIR_TODO","UPDATE_TODO","SEARCH","SORT","SELECT_ALL","DELETE_ALL","changeStatusAction","statusAction","type","Types","repairTodo","id","search","name","sortTodo","statusSort","ActionTodo","classStatusAction","props","showAdd","onSearch","e","target","value","changeIcon","statusIcon","this","keyword","onReset","onSort","onSelectAll","onDeleteAll","className","placeholder","onChange","onClick","Component","ActionTodoContainer","onHandleReset","onHandleResetSort","onHandleSearch","onHandleSort","statusSelect","onHandleSelectAll","onHandleDeleteAll","connect","state","dataTodos","selectAll","dispatch","actions","Add","classAddOption","onSubmit","preventDefault","showAction","onHandleAdd","autoFocus","AddTodoContainer","setState","trim","AddTodo","Options","CountComplete","nextProps","totalComplete","CountCompleteContainer","filter","dataTodo","status","length","Counts","count","index","progress","total","complete","Math","ceil","style","width","CountsContainer","TodoItem","toggleStatus","onDeleteTodo","onRepairTodo","height","parentElement","indexOf","findTodosItemElem","clientHeight","onBack","onInputValue","scrollHeight","fieldName","onUpdateTodo","onEnter","charCode","renderItem","idRepairTodo","stt","pointerEvents","stopPropagation","onKeyPress","TodoItemContainer","handleDeleteTodo","handleRepairTodo","todo","handleUpdateTodo","TodoList","renderTodosItem","map","TodoListContainer","dataTodosInit","item","toLowerCase","sort","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","JSON","parse","localStorage","getItem","action","console","log","newState","newTodo","Date","now","push","setItem","stringify","stateToggleStatus","stateDel","stateUpdate","stateSelectAll","stateDelete","appReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAaA,EAAa,aACbC,EAAuB,uBACvBC,EAAW,WAEXC,EAAgB,gBAChBC,EAAc,cACdC,EAAc,cACdC,EAAc,cACdC,EAAS,SACTC,EAAO,OACPC,EAAa,aACbC,EAAa,aCJbC,EAAqB,SAACC,GAC/B,MAAO,CACHC,KAAMC,EACNF,iBA2BKG,EAAa,SAACC,GACvB,MAAO,CACHH,KAAMC,EACNE,OASKC,EAAS,SAACC,GACnB,MAAO,CACHL,KAAMC,EACNI,SAIKC,EAAW,SAACC,GACrB,MAAO,CACHP,KAAMC,EACNM,eCyEOC,E,4MA/HXC,kBAAoB,WAAO,IACfV,EAAiB,EAAKW,MAAtBX,aACR,OAAqB,OAAjBA,EACO,UAEFA,EACE,wBAEe,IAAjBA,EACE,4BADN,G,EAITY,QAAU,YAENA,EADoB,EAAKD,MAAjBC,Y,EAGZC,SAAW,SAACC,IAERD,EADqB,EAAKF,MAAlBE,UACCC,EAAEC,OAAOC,Q,EAEtBC,WAAa,SAACC,EAAYV,GACtB,OAAIU,IAAeV,EACR,GAGA,W,uDAIN,MAEsEW,KAAKR,MAAxES,EAFH,EAEGA,QAASC,EAFZ,EAEYA,QAASC,EAFrB,EAEqBA,OAAQd,EAF7B,EAE6BA,WAAYe,EAFzC,EAEyCA,YAAaC,EAFtD,EAEsDA,YAC3D,OACI,sBAAKC,UAAWN,KAAKT,oBAArB,UACI,oBAAIe,UAAU,kBAAd,uCAGA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,uBACIxB,KAAK,OACLwB,UAAU,iBACVC,YAAY,6BACZpB,KAAK,cACLU,MAAOI,EACPO,SAAUR,KAAKN,WAEnB,sBACIY,UAAU,aACVG,QAASP,EAFb,SAII,mBAAGI,UAAU,uBAGrB,qBAAKA,UAAU,eAAf,SACI,wBACIA,UAAU,yBACVG,QAAST,KAAKP,QAFlB,SAII,mBAAGa,UAAU,8BAIzB,qBAAIA,UAAU,gBAAd,UACI,oBAAIA,UAAU,qBAAd,SACI,yBACIA,UAAU,gBACVG,QAASN,EAFb,UAII,sBACIG,UAAU,WADd,yCAKA,sBAAMA,UAAW,wBAA0BN,KAAKF,YAAY,EAAGT,GAA/D,SACI,mBAAGiB,UAAU,kBAGjB,sBAAMA,UAAW,2CAA6CN,KAAKF,WAAW,EAAGT,GAAjF,SACI,mBAAGiB,UAAU,mBAEjB,sBAAMA,UAAW,uCAAyCN,KAAKF,WAAW,EAAGT,GAA7E,SACI,mBAAGiB,UAAU,wBAIzB,oBAAIA,UAAU,qBAAd,SACI,yBACIA,UAAU,yBACVG,QAAS,kBAAML,GAAY,IAF/B,UAII,qBAAKE,UAAU,WAAf,8CAGA,sBAAMA,UAAU,uCAAhB,SACI,mBAAGA,UAAU,wBAIzB,oBAAIA,UAAU,qBAAd,SACI,yBACIA,UAAU,6BACVG,QAAS,kBAAML,GAAY,IAF/B,6CAKA,sBAAME,UAAU,0CAAhB,SACQ,mBAAGA,UAAU,wBAIzB,oBAAIA,UAAU,qBAAd,SACI,yBACIA,UAAU,sBACVG,QAAS,kBAAMJ,KAFnB,4CAKd,sBAAMC,UAAU,6BAAhB,SACsB,mBAAGA,UAAU,kC,GAvHpBI,a,OCCnBC,E,4MAmBFlB,QAAU,WAAM,MACuB,EAAKD,MAAhCC,EADI,EACJA,QAASmB,EADL,EACKA,cACjBnB,GAAQ,GACRmB,KAEAC,EAD8B,EAAKrB,MAA3BqB,sB,EAGZnB,SAAW,SAACG,IAERiB,EAD2B,EAAKtB,MAAxBsB,gBACOjB,I,EAEnBK,QAAU,YAENU,EAD0B,EAAKpB,MAAvBoB,kB,EAGZT,OAAS,YAELY,EADyB,EAAKvB,MAAtBuB,iB,EAGZX,YAAc,SAACY,IAEXC,EAD8B,EAAKzB,MAA3ByB,mBACUD,I,EAEtBX,YAAc,YAEVa,EAD8B,EAAK1B,MAA3B0B,sB,uDAzCF,IAAD,EACyClB,KAAKR,MAA3CX,EADH,EACGA,aAAcoB,EADjB,EACiBA,QAASZ,EAD1B,EAC0BA,WAE/B,OACI,cAAC,EAAD,CACII,QAASO,KAAKP,QACdZ,aAAcA,EACda,SAAUM,KAAKN,SACfO,QAASA,EACTC,QAASF,KAAKE,QACdC,OAAQH,KAAKG,OACbd,WAAYA,EACZe,YAAaJ,KAAKI,YAClBC,YAAaL,KAAKK,kB,GAfAK,aAoFnBS,eApCS,SAAAC,GACpB,MAAO,CACHvC,aAAcuC,EAAMvC,aACpBoB,QAASmB,EAAMlC,OACfG,WAAY+B,EAAMhC,SAClBiC,UAAWD,EAAMC,UACjBL,aAAcI,EAAME,cAGD,SAACC,EAAU/B,GAClC,MAAO,CACHC,QAAS,SAACZ,GACN0C,EAASC,EAA2B3C,KAExCiC,eAAgB,SAAC3B,GACboC,EAASC,EAAerC,KAE5ByB,cAAe,WACXW,EAASC,EAAe,MAE5BT,aAAc,WACVQ,EAASC,MAEbX,kBAAmB,WACfU,EAASC,GAAkB,KAE/BP,kBAAmB,SAACD,GAChBO,EFjBa,SAACP,GACtB,MAAO,CACHlC,KAAMC,EACNiC,gBEcaQ,CAAkBR,KAE/BE,kBAAmB,WACfK,EFbD,CACHzC,KAAMC,QEkBCoC,CAA6CR,GCb7Cc,E,4MAxEXC,eAAiB,WAAM,IACX7C,EAAiB,EAAKW,MAAtBX,aACR,OAAqB,OAAjBA,EACO,MAEFA,EACE,gBAEe,IAAjBA,EACE,oBADN,G,EAmDT8C,SAAW,SAAChC,GACRA,EAAEiC,kB,EAENC,WAAa,YAETA,EADuB,EAAKrC,MAApBqC,e,EAGZrB,SAAW,SAACb,IAERa,EADqB,EAAKhB,MAAlBgB,UACCb,EAAEC,OAAOC,Q,uDAxDZ,IAAD,EACkCG,KAAKR,MAApCsC,EADH,EACGA,YAAa3C,EADhB,EACgBA,KAAMe,EADtB,EACsBA,QAC3B,OACI,sBAAKI,UAAWN,KAAK0B,iBAArB,UACI,oBAAIpB,UAAU,kBAAd,2CAGA,uBACIA,UAAU,gBACVqB,SAAU3B,KAAK2B,SAFnB,UAII,sBAAKrB,UAAU,iBAAf,UACI,uBACIxB,KAAK,OACLwB,UAAU,aACVC,YAAY,mCACZV,MAAOV,EACPqB,SAAUR,KAAKQ,SACfuB,WAAS,IAEb,sBAAMzB,UAAU,aACZG,QAASP,EADb,SAII,mBAAGI,UAAU,uBAGrB,sBAAKA,UAAU,WAAf,UACI,yBACIA,UAAU,qCACVG,QAASqB,EAFb,UAII,mBAAGxB,UAAU,uBAJjB,aAOA,wBACIA,UAAU,mBACVG,QAAST,KAAK6B,WAFlB,SAII,mBAAGvB,UAAU,8B,GApDvBI,aCEZsB,E,kDACF,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IAqBVU,QAAU,WACN,EAAK+B,SAAS,CACV9C,KAAM,MAxBK,EA2BnB2C,YAAc,WAAO,IACTA,EAAgB,EAAKtC,MAArBsC,YACA3C,EAAS,EAAKiC,MAAdjC,KACY,KAAhBA,EAAK+C,SACLJ,EAAY3C,GACZ,EAAKe,YAhCM,EAqCnB2B,WAAa,YAETA,EADuB,EAAKrC,MAApBqC,aACG,GACX,EAAKI,SAAS,CACV9C,KAAM,MAzCK,EA4CnBqB,SAAW,SAACX,GAER,EAAKoC,SAAS,CACV9C,KAAMU,KA7CV,EAAKuB,MAAQ,CACTjC,KAAM,IAHK,E,qDAOT,IACEN,EAAiBmB,KAAKR,MAAtBX,aACAM,EAASa,KAAKoB,MAAdjC,KAER,OACI,cAACgD,EAAD,CACItD,aAAcA,EACdgD,WAAY7B,KAAK6B,WACjBC,YAAa9B,KAAK8B,YAClB5B,QAASF,KAAKE,QACdM,SAAUR,KAAKQ,SACfrB,KAAMA,Q,GAnBSuB,aAqEhBS,eAjBS,SAAAC,GACpB,MAAO,CACHvC,aAAcuC,EAAMvC,iBAGD,SAAC0C,EAAU/B,GAClC,MAAO,CACHqC,WAAY,SAAChD,GACT0C,EAASC,EAA2B3C,KAExCiD,YAAa,SAAC3C,GACVoC,EJtDW,SAACpC,GACpB,MAAO,CACHL,KAAMC,EACNI,QImDaqC,CAAgBrC,QAMtBgC,CAA6Ca,GCzD7CI,E,uKAVP,OACI,sBAAK9B,UAAU,WAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GANMI,aC0BP2B,E,wLAzBeC,GAClBA,EAAUC,gB,+BAKR,IACEA,EAAkBvC,KAAKR,MAAvB+C,cACR,OACI,qBAAKjC,UAAU,SAAf,SACI,sBAAKA,UAAU,iCAAf,kDAEI,sBAAMA,UAAU,qBAAhB,SACKiC,IAEL,sBAAMjC,UAAU,eAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,wB,GApBRI,aCEtB8B,E,4MACFD,cAAgB,WAEZ,OADsB,EAAK/C,MAAnB6B,UACSoB,QAAO,SAAAC,GAAQ,OAAwB,IAApBA,EAASC,UAAiBC,Q,uDAG9D,OACI,cAAC,EAAD,CAAeL,cAAevC,KAAKuC,sB,GAPV7B,aAiBtBS,eANS,SAAAC,GACpB,MAAO,CACHC,UAAWD,EAAMC,aAIe,KAAzBF,CAA+BqB,GCuD/BK,E,4MAxEXC,MAAQ,SAACH,GAAY,IACTtB,EAAc,EAAK7B,MAAnB6B,UACR,KAAIA,EAAUuB,QAAU,GACxB,OAAe,IAAXD,EACOtB,EAAUoB,QAAO,SAACC,EAAUK,GAC/B,OAA2B,IAApBL,EAASC,UACjBC,QAEa,IAAXD,EACEtB,EAAUoB,QAAO,SAACC,EAAUK,GAC/B,OAA2B,IAApBL,EAASC,UACjBC,YAHF,G,EAMTI,SAAW,WAAO,IACN3B,EAAc,EAAK7B,MAAnB6B,UACR,KAAIA,EAAUuB,QAAU,GAAxB,CACA,IAAIK,EAAQ5B,EAAUuB,OAClBM,EAAW7B,EAAUoB,QAAO,SAAAC,GAAQ,OAAwB,IAApBA,EAASC,UAAiBC,OACpDvB,EAAUoB,QAAO,SAAAC,GAAQ,OAAwB,IAApBA,EAASC,UAAiBC,OACzE,OAAOO,KAAKC,KAAMF,EAAWD,EAAS,O,uDAEhC,IACE5B,EAAcrB,KAAKR,MAAnB6B,UACR,OACI,sBAAKf,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,sBAAMA,UAAU,qBAAhB,uCACA,qBAAKA,UAAU,wBAAf,SACI,sBAAKA,UAAU,UAAU+C,MAAO,CAAEC,MAAOtD,KAAKgD,WAAa,KAA3D,UAAmEhD,KAAKgD,WAAxE,SAEJ,qBAAK1C,UAAU,sBAAf,qBAEJ,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,8BAAf,yCAEhB,sBAAMA,UAAU,kBAAhB,SAE4Be,EAAUuB,SAGlB,sBAAMtC,UAAU,eAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,oBAGxB,cAAC,EAAD,IACA,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,qCAAf,8CAEA,sBAAMA,UAAU,yBAAhB,SAEYN,KAAK8C,OAAM,GAAS9C,KAAK8C,OAAM,GAAS,IAIhD,sBAAMxC,UAAU,eAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,eAChB,sBAAMA,UAAU,8B,GA9DvBI,aCEf6C,E,uKACQ,IACElC,EAAcrB,KAAKR,MAAnB6B,UACR,OACI,cAAC,EAAD,CAAQA,UAAWA,Q,GAJDX,aAefS,eAPS,SAAAC,GACpB,MAAO,CACHC,UAAWD,EAAMC,aAKe,KAAzBF,CAA+BoC,G,OCwK/BC,E,kDAzLX,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IAcViE,aAAe,SAACxE,IAEZwE,EADyB,EAAKjE,MAAtBiE,cACKxE,IAjBE,EAmBnByE,aAAe,SAACzE,IAEZyE,EADyB,EAAKlE,MAAtBkE,cACKzE,IArBE,EAuBnB0E,aAAe,SAAC1E,EAAIU,GAAM,IACdgE,EAAiB,EAAKnE,MAAtBmE,aAUFC,EAToB,WAEtB,IADA,IAAIhE,EAASD,EAAEC,OACRA,EAAOiE,eAAe,CACzB,IAA8D,IAA1DjE,EAAOiE,cAAcvD,UAAUwD,QAAQ,cACvC,OAAOlE,EAAOiE,cAElBjE,EAASA,EAAOiE,eAGTE,GAAoBC,aAAe,EAGlDL,EAAa1E,GACb,EAAKgD,SAAS,CACV2B,YAvCW,EA4CnBK,OAAS,YAELA,EADmB,EAAKzE,MAAhByE,WA7CO,EAgDnBC,aAAe,SAACvE,GAECA,EAAEC,OAAOyD,MAAMO,OAA5B,IACMO,EAAexE,EAAEC,OAAOuE,aAAe,EAG7C,EAAKlC,SAAS,CACVmC,UAAWzE,EAAEC,OAAOC,MACpB+D,OAAQO,KAxDG,EA2DnBE,aAAe,SAACpF,IAGZoF,EAFyB,EAAK7E,MAAtB6E,cAEK,CACTpF,KACAE,KAHkB,EAAKiC,MAAnBgD,aA7DO,EAmEnBzC,SAAW,SAAChC,GACRA,EAAEiC,kBApEa,EAqFnB0C,QAAU,SAAC3E,GACY,KAAfA,EAAE4E,UACF5E,EAAEiC,iBAEOjC,EAAEC,OAAOyD,MAAMO,OAA5B,IACMO,EAAexE,EAAEC,OAAOuE,aAAe,EAG7C,EAAKlC,SAAS,CACVmC,UAAWzE,EAAEC,OAAOC,MACpB+D,OAAQO,KA/FG,EAoGnBK,WAAa,WAAM,MACyB,EAAKhF,MAArCkD,EADO,EACPA,SAAU+B,EADH,EACGA,aAAcC,EADjB,EACiBA,IACxBN,EAAc,EAAKhD,MAAnBgD,UACAnF,EAAqByD,EAArBzD,GAAIE,EAAiBuD,EAAjBvD,KAAMwD,EAAWD,EAAXC,OAElB,OAAI8B,IAAiBxF,EAEb,sBAAKqB,UAAU,iBAAf,UACI,sBACIA,UAAU,eACVG,QAAS,kBAAM,EAAKgD,aAAaxE,IAFrC,UAII,sBAAMqB,UAAWqC,EAAS,6BAA+B,mCAAzD,SACI,mBAAGrC,UAAU,mBAEjB,sBAAMA,UAAYqC,EAA2C,uCAAlC,gCAA3B,SACI,mBAAGrC,UAAU,mBAEjB,uBAAMA,UAAU,mBAAhB,UAEQoE,EAEJ,sBAAMpE,UAAU,MAAhB,gBAEInB,QAIZ,sBAAKmB,UAAU,kBAAf,UACI,sBACIA,UAAWmE,IAAiBxF,EAAK,qBAAuB,cACxDwB,QAAS,SAACd,GAAD,OAAO,EAAKgE,aAAa1E,EAAIU,IAF1C,SAII,mBAAGW,UAAU,cAAc+C,MAAO,CAAEsB,eAAe,GAC/ClE,QAAS,EAAKmE,oBAGtB,sBACItE,UAAWmE,IAAiBxF,EAAK,qBAAuB,eACxDwB,QAAS,kBAAM,EAAKiD,aAAazE,IAFrC,SAII,mBAAGqB,UAAU,6BAMxBmE,IAAiBxF,EAElB,uBACIqB,UAAU,iBACVqB,SAAU,EAAKA,SAFnB,UAII,qBAAKrB,UAAWmE,IAAiBxF,EAAK,sBAAwB,4BAA9D,SACI,0BACIH,KAAK,OACLG,GAAG,cACHqB,UAAU,iBACVT,MAAOuE,EACP5D,SAAU,EAAK0D,aACfW,WAAY,EAAKP,QACjBjB,MAAO,CAAEO,OAAQ,EAAKxC,MAAMwC,OAAS,UAG7C,sBAAKtD,UAAWmE,IAAiBxF,EAAK,yBAA2B,gCAAjE,UACI,sBACIqB,UAAU,cACVG,QAAS,SAACd,GAAD,OAAO,EAAK0E,aAAapF,IAFtC,SAII,mBAAGqB,UAAU,kBAEjB,sBACIA,UAAU,YACVG,QAAS,kBAAM,EAAKwD,UAFxB,SAII,mBAAG3D,UAAU,iCA5B5B,GAjJL,EAAKc,MAAQ,CACTgD,UAAW,GACXR,OAAQ,MAJG,E,sEAOOtB,GAAY,IAC1BI,EAAaJ,EAAbI,SACJA,GACA1C,KAAKiC,SAAS,CACVmC,UAAW1B,EAASvD,S,+BA2DtB,IACEuD,EAAa1C,KAAKR,MAAlBkD,SACAC,EAAWD,EAAXC,OAER,GAAID,EAEA,OACI,oBAAIpC,UAAWqC,EAAM,mDAArB,SAEQ3C,KAAKwE,mB,GAhFN9D,aCGjBoE,E,4MAgBFrB,aAAe,SAACxE,IAEZwE,EADyB,EAAKjE,MAAtBiE,cACKxE,I,EAEjByE,aAAe,SAACzE,IAEZ8F,EAD6B,EAAKvF,MAA1BuF,kBACS9F,I,EAErB0E,aAAe,SAAC1E,IAEZ+F,EAD6B,EAAKxF,MAA1BwF,kBACS/F,I,EAErBgF,OAAS,YAELA,EADmB,EAAKzE,MAAhByE,W,EAGZI,aAAe,SAACY,GAAS,MAEgB,EAAKzF,MAAlC0F,EAFa,EAEbA,iBAAkBjB,EAFL,EAEKA,OACD,KAArBgB,EAAK9F,KAAK+C,SACVgD,EAAiBD,GACjBhB,M,uDApCE,IAAD,EACmCjE,KAAKR,MAArCkD,EADH,EACGA,SAAU+B,EADb,EACaA,aAAcC,EAD3B,EAC2BA,IAChC,OACI,cAAC,EAAD,CACIhC,SAAUA,EACVgC,IAAKA,EACLjB,aAAczD,KAAKyD,aACnBC,aAAc1D,KAAK0D,aACnBC,aAAc3D,KAAK2D,aACnBc,aAAcA,EACdR,OAAQjE,KAAKiE,OACbI,aAAcrE,KAAKqE,mB,GAZH3D,aAmEjBS,eA1BS,SAAAC,GACpB,MAAO,CACHvC,aAAcuC,EAAMvC,aACpB4F,aAAcrD,EAAMpC,eAGD,SAACuC,EAAU/B,GAClC,MAAO,CACHiE,aAAc,SAACxE,GACXsC,EX9BgB,SAACtC,GACzB,MAAO,CACHH,KAAMC,EACNE,MW2BauC,CAAqBvC,KAElC8F,iBAAkB,SAAC9F,GACfsC,EX3Bc,SAACtC,GACvB,MAAO,CACHH,KAAMC,EACNE,MWwBauC,CAAmBvC,KAEhC+F,iBAAkB,SAAC/F,GACfsC,EAASC,EAAmBvC,KAEhCgF,OAAQ,WACJ1C,EAASC,MAEb0D,iBAAkB,SAACD,GACf1D,EXxBc,SAAC0D,GACvB,MAAO,CACHnG,KAAMC,EACNkG,QWqBazD,CAAmByD,QAKzB9D,CAA6C2D,GCpC7CK,E,4MAjBXC,gBAAkB,WAAO,IACb/D,EAAc,EAAK7B,MAAnB6B,UACR,GAAIA,EAAUuB,OAAS,EACnB,OAAOvB,EAAUgE,KAAI,SAAC3C,EAAUK,GAC5B,OACI,cAAC,EAAD,CAEI2B,IAAKhC,EAASgC,IACdhC,SAAUA,GAFLA,EAASzD,Q,uDAjB9B,OACI,qBAAKqB,UAAU,oBAAf,SACI,oBAAIA,UAAU,aAAd,SAEQN,KAAKoF,0B,GARN1E,aCAjB4E,E,uKAIQ,IAAD,EAC2BtF,KAAKR,MAA7BS,EADH,EACGA,QAASZ,EADZ,EACYA,WACXgC,EAAcrB,KAAKR,MAAnB6B,UACAkE,EAAa,YAAOlE,GA0B1B,OAxBIA,IACuB,KAAnBpB,EAAQiC,SACRb,EAAYA,EAAUoB,QAAO,SAAA+C,GACzB,OAAiF,IAA1EA,EAAKrG,KAAK+C,OAAOuD,cAAc3B,QAAQ7D,EAAQiC,OAAOuD,mBAOlD,IAAfpG,IACAgC,EAAYkE,EAAcG,MAAK,SAACC,EAAGC,GAC/B,OAAOD,EAAEhD,SAAWiD,EAAEjD,OAAS,EAAIgD,EAAEhD,OAAS,GAAK,MAGxC,IAAftD,IACAgC,EAAYkE,EAAcG,MAAK,SAACC,EAAGC,GAC/B,OAAOD,EAAEhD,SAAWiD,EAAEjD,OAAS,EAAIgD,EAAEhD,QAAU,EAAI,OAQ3D,cAAC,EAAD,CACItB,UAAWA,EACXpB,QAASA,Q,GApCOS,aAkDjBS,eARS,SAAAC,GACpB,MAAO,CACHC,UAAWD,EAAMC,UACjBpB,QAASmB,EAAMlC,OACfG,WAAY+B,EAAMhC,YAIc,KAAzB+B,CAA+BmE,GC/B/BO,E,uKAfX,OACE,qBAAKvF,UAAU,UAAf,SACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,oBAAIA,UAAU,qBAAd,yBAEF,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,a,GAVQI,aCMHoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCJVQ,EAFYC,KAAKC,MAAMC,aAAaC,QAAQ,eAEhB,GA4FjBtF,EA3FC,SAAZA,IAA+C,IAAlCD,EAAiC,uDAAzBmF,EAAcK,EAAW,uCAC9C,OAAQA,EAAO9H,MACX,KAAKC,EAGD,OAFA8H,QAAQC,IAAIzF,GAELD,EACX,KAAKrC,EAGD,IAAIgI,EAAQ,YAAO3F,GACb4F,EAAU,CACZtC,IAAKqC,EAASnE,OAAS,EACvB3D,GAAIgI,KAAKC,MACT/H,KAAMyH,EAAOzH,KACbwD,QAAQ,GAIZ,OAFAoE,EAASI,KAAKH,GACdN,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUN,IAC1C,YAAIA,GACf,KAAKhI,EACD,IAAIuI,EAAiB,YAAOlG,GAc5B,OAbAkG,EAAoBA,EAAkBjC,KAAI,SAAAG,GACtC,OAAIA,EAAKvG,KAAO2H,EAAO3H,GACZ,2BACAuG,GADP,IAEI7C,QAAS6C,EAAK7C,SAIX6C,KAIfkB,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUC,IAC1CA,EACX,KAAKvI,EACD,IAAIwI,EAAQ,YAAOnG,GAUnB,OARAmG,GADAA,EAAWA,EAAS9E,QAAO,SAAA+C,GAAI,OAAIA,EAAKvG,KAAO2H,EAAO3H,OAClCoG,KAAI,SAACG,EAAMzC,GAC3B,OAAO,2BACAyC,GADP,IAEId,IAAK3B,EAAQ,OAIrB2D,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUE,IAC1C,YAAIA,GACf,KAAKxI,EAED,IAAIyI,EAAW,YAAOpG,GAatB,OAZAoG,EAAcA,EAAYnC,KAAI,SAACG,GAC3B,OAAIA,EAAKvG,KAAO2H,EAAO3B,KAAKhG,GACjB,2BACAuG,GADP,IAEIrG,KAAMyH,EAAO3B,KAAK9F,OAGdqG,KAGhBkB,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUG,IAE1C,YAAIA,GACf,KAAKzI,EACD,IAAI0I,EAAc,YAAOrG,GAkBzB,OAhBIqG,EADAb,EAAO5F,aACUyG,EAAepC,KAAI,SAAAG,GAChC,OAAO,2BACAA,GADP,IAEI7C,OAAQiE,EAAO5F,kBAKNyG,EAAepC,KAAI,SAAAG,GAChC,OAAO,2BACAA,GADP,IAEI7C,QAAQ,OAIpB+D,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUI,IAC1CA,EACX,KAAK1I,EACD,IAAM2I,EAAc,GAEpB,OADAhB,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUK,IAC1C,GACX,QAAS,OAAO,YAAItG,GAExB,OAAOA,GClFIvC,GATI,WAAmC,IAAlCuC,EAAiC,uDADlC,KACuBwF,EAAW,uCACjD,OAAQA,EAAO9H,MACX,KAAKC,EAGD,OAAO6H,EAAO/H,aAClB,QAAS,OAAOuC,ICSTpC,GAfE,WAAmC,IAAlCoC,EAAiC,uDADhC,KACqBwF,EAAW,uCAC/C,OAAQA,EAAO9H,MACX,KAAKC,EAGD,OAAI6H,EAAO3H,GACA2H,EAAO3H,GAGP,KAGf,QAAS,OAAOmC,ICLTlC,GAPF,WAAmC,IAAlCkC,EAAiC,uDAD5B,GACiBwF,EAAW,uCAC3C,OAAQA,EAAO9H,MACX,KAAKC,EACD,OAAO6H,EAAOzH,KAClB,QAAS,OAAOiC,ICUThC,GAdA,WAAmC,IAAlCgC,EAAiC,wDAD9B,EACmBwF,EAAW,uCAC7C,OAAQA,EAAO9H,MACX,KAAKC,EAQD,OALIqC,GADuB,IAAvBwF,EAAOvH,YAIW,IAAV+B,GAHC,EAGkBA,EAAQ,EAG3C,QAAS,OAAOA,ICATuG,GAPEC,YAAgB,CAC7BvG,YACAxC,gBACAG,cACAE,UACAE,cCHEyI,GAAQC,YAAYH,IAC1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,GAAjB,SACE,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,QAIJC,SAASC,eAAe,SAM1BrC,M","file":"static/js/main.e7c5591a.chunk.js","sourcesContent":["export const DATA_TODOS = 'DATA_TODOS';\r\nexport const CHANGE_STATUS_ACTION = 'CHANGE_STATUS_ACTION';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOTAL_COMPLETE = 'TOTAL_COMPLETE';\r\nexport const TOGGLE_STATUS = 'TOGGLE_STATUS';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const REPAIR_TODO = 'REPAIR_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const SEARCH = 'SEARCH';\r\nexport const SORT = 'SORT';\r\nexport const SELECT_ALL = 'SELECT_ALL';\r\nexport const DELETE_ALL = 'DELETE_ALL';\r\n\r\n","import * as Types from '../constants/ActionTypes';\r\nexport const dataTodos = () => {\r\n    return {\r\n        type: Types.DATA_TODOS\r\n\r\n    }\r\n}\r\nexport const changeStatusAction = (statusAction) => {\r\n    return {\r\n        type: Types.CHANGE_STATUS_ACTION,\r\n        statusAction\r\n    }\r\n}\r\nexport const addTodo = (name) => {\r\n    return {\r\n        type: Types.ADD_TODO,\r\n        name\r\n    }\r\n}\r\nexport const totalComplete = (status) => {\r\n    return {\r\n        type: Types.TOTAL_COMPLETE,\r\n        status\r\n    }\r\n}\r\nexport const toggleStatus = (id) => {\r\n    return {\r\n        type: Types.TOGGLE_STATUS,\r\n        id\r\n    }\r\n}\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: Types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\nexport const repairTodo = (id) => {\r\n    return {\r\n        type: Types.REPAIR_TODO,\r\n        id\r\n    }\r\n}\r\nexport const updateTodo = (todo) => {\r\n    return {\r\n        type: Types.UPDATE_TODO,\r\n        todo\r\n    }\r\n}\r\nexport const search = (name) => {\r\n    return {\r\n        type: Types.SEARCH,\r\n        name\r\n    }\r\n}\r\n\r\nexport const sortTodo = (statusSort) => {\r\n    return {\r\n        type: Types.SORT,\r\n        statusSort\r\n    }\r\n}\r\nexport const selectAll = (statusSelect) => {\r\n    return {\r\n        type: Types.SELECT_ALL,\r\n        statusSelect\r\n    }\r\n}\r\nexport const deleteAll = () => {\r\n    return {\r\n        type: Types.DELETE_ALL,\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { deleteAll } from '../actions/actions';\r\n\r\nclass ActionTodo extends Component {\r\n\r\n    classStatusAction = () => {\r\n        const { statusAction } = this.props;\r\n        if (statusAction === null) {\r\n            return \"actions\"\r\n        }\r\n        else if (statusAction) {\r\n            return \"actions hide-actions\";\r\n        }\r\n        else if (statusAction === false) {\r\n            return \"actions show-actions\";\r\n        }\r\n    }\r\n    showAdd = () => {\r\n        const { showAdd } = this.props;\r\n        showAdd();\r\n    }\r\n    onSearch = (e) => { //Bắt sự kiện onChange của ô tìm kiếm để lấy ra giá trị\r\n        const { onSearch } = this.props;\r\n        onSearch(e.target.value);\r\n    }\r\n    changeIcon = (statusIcon, statusSort) => {\r\n        if (statusIcon === statusSort) {\r\n            return '';\r\n        }\r\n        else {\r\n            return ' d-none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.statusAction)\r\n        const { keyword, onReset, onSort, statusSort, onSelectAll, onDeleteAll } = this.props;\r\n        return (\r\n            <div className={this.classStatusAction()}>\r\n                <h3 className=\"setting__header\">\r\n                    Chức năng\r\n    </h3>\r\n                <div className=\"setting__body mb-10\">\r\n                    <div className=\"actions__input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"actions__input\"\r\n                            placeholder=\"Tìm kiếm...\"\r\n                            name=\"fieldSearch\"\r\n                            value={keyword}\r\n                            onChange={this.onSearch}\r\n                        />\r\n                        <span\r\n                            className=\"icon-reset\"\r\n                            onClick={onReset}\r\n                        >\r\n                            <i className=\"fas fa-eraser\" />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"actions__btn\">\r\n                        <button\r\n                            className=\"btn btn--back btn--add\"\r\n                            onClick={this.showAdd}\r\n                        >\r\n                            <i className=\"fas fa-plus-square\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"setting__menu\">\r\n                    <li className=\"setting__menu-item\">\r\n                        <button\r\n                            className=\"btn btn--sort\"\r\n                            onClick={onSort}\r\n                        >\r\n                            <span\r\n                                className=\"btn-text\"\r\n                            >\r\n                                Sắp xếp\r\n          </span>\r\n                            <span className={\"icon-check icon-sort \" + this.changeIcon(-1, statusSort)}>\r\n                                <i className=\"fas fa-sort\" />\r\n                            </span>\r\n\r\n                            <span className={\"icon-check icon-sort icon--not-complete \" + this.changeIcon(0, statusSort)}>\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                            <span className={\"icon-check icon-sort icon--complete \" + this.changeIcon(1, statusSort)}>\r\n                                <i className=\"fas fa-check\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"setting__menu-item\">\r\n                        <button\r\n                            className=\"btn btn--mark-complete\"\r\n                            onClick={() => onSelectAll(true)}\r\n                        >\r\n                            <div className=\"btn-text\">\r\n                                Chọn tất cả\r\n          </div>\r\n                            <span className=\"icon-check icon-mark icon--complete \">\r\n                                <i className=\"fas fa-check\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"setting__menu-item\">\r\n                        <button\r\n                            className=\"btn btn--mark-not-complete\"\r\n                            onClick={() => onSelectAll(false)}\r\n                        >\r\n                            Chọn tất cả\r\n                        <span className=\"icon-check icon-mark icon--not-complete\">\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"setting__menu-item\">\r\n                        <button\r\n                            className=\"btn btn--delete-all\"\r\n                            onClick={() => onDeleteAll()}\r\n                        >\r\n                            Xóa tất cả\r\n          <span className=\"icon-check icon-delete-all\">\r\n                                <i className=\"fas fa-trash\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionTodo;","import React, { Component } from 'react';\r\nimport ActionTodo from '../components/ActionTodo';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nclass ActionTodoContainer extends Component {\r\n\r\n    render() {\r\n        const { statusAction, keyword, statusSort } = this.props;\r\n\r\n        return (\r\n            <ActionTodo\r\n                showAdd={this.showAdd}\r\n                statusAction={statusAction}\r\n                onSearch={this.onSearch}\r\n                keyword={keyword}\r\n                onReset={this.onReset}\r\n                onSort={this.onSort}\r\n                statusSort={statusSort}\r\n                onSelectAll={this.onSelectAll}\r\n                onDeleteAll={this.onDeleteAll}\r\n            />\r\n        );\r\n    }\r\n    showAdd = () => { //Show Add Todo Component\r\n        const { showAdd, onHandleReset } = this.props;\r\n        showAdd(true);\r\n        onHandleReset();\r\n        const { onHandleResetSort } = this.props;\r\n        onHandleResetSort();\r\n    }\r\n    onSearch = (value) => {\r\n        const { onHandleSearch } = this.props;\r\n        onHandleSearch(value)\r\n    }\r\n    onReset = () => {\r\n        const { onHandleReset } = this.props;\r\n        onHandleReset()\r\n    }\r\n    onSort = () => {\r\n        const { onHandleSort } = this.props;\r\n        onHandleSort()\r\n    }\r\n    onSelectAll = (statusSelect) => {\r\n        const { onHandleSelectAll } = this.props;\r\n        onHandleSelectAll(statusSelect)\r\n    }\r\n    onDeleteAll = () => {\r\n        const { onHandleDeleteAll } = this.props;\r\n        onHandleDeleteAll()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction,\r\n        keyword: state.search,\r\n        statusSort: state.sortTodo,\r\n        dataTodos: state.dataTodos,\r\n        statusSelect: state.selectAll\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        showAdd: (statusAction) => {\r\n            dispatch(actions.changeStatusAction(statusAction));\r\n        },\r\n        onHandleSearch: (name) => {\r\n            dispatch(actions.search(name))\r\n        },\r\n        onHandleReset: () => {\r\n            dispatch(actions.search(''))\r\n        },\r\n        onHandleSort: () => {\r\n            dispatch(actions.sortTodo());\r\n        },\r\n        onHandleResetSort: () => {\r\n            dispatch(actions.sortTodo(-1))\r\n        },\r\n        onHandleSelectAll: (statusSelect) => {\r\n            dispatch(actions.selectAll(statusSelect))\r\n        },\r\n        onHandleDeleteAll: () => {\r\n            dispatch(actions.deleteAll())\r\n        }\r\n\r\n    }\r\n}\r\n// export default ActionTodoContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionTodoContainer);\r\n","import React, { Component } from 'react';\r\n\r\nclass Add extends Component {\r\n    classAddOption = () => { //Show Add Action\r\n        const { statusAction } = this.props;\r\n        if (statusAction === null) {\r\n            return \"add\"\r\n        }\r\n        else if (statusAction) {\r\n            return \"add show-add\";\r\n        }\r\n        else if (statusAction === false) {\r\n            return \"add hide-add\";\r\n        }\r\n    }\r\n    render() {\r\n        const { onHandleAdd, name, onReset } = this.props;\r\n        return (\r\n            <div className={this.classAddOption()}>\r\n                <h3 className=\"setting__header\">\r\n                    Thêm công việc\r\n    </h3>\r\n                <form\r\n                    className=\"setting__body\"\r\n                    onSubmit={this.onSubmit}\r\n                >\r\n                    <div className=\"add__input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"add__input\"\r\n                            placeholder=\"Thêm công việc...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            autoFocus\r\n                        />\r\n                        <span className=\"icon-reset\"\r\n                            onClick={onReset}\r\n\r\n                        >\r\n                            <i className=\"fas fa-eraser\" />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"add__btn\">\r\n                        <button\r\n                            className=\"btn btn--glowing-gradient btn--add\"\r\n                            onClick={onHandleAdd}\r\n                        >\r\n                            <i className=\"fas fa-plus-circle\" />\r\n          Thêm\r\n        </button>\r\n                        <button\r\n                            className=\"btn btn--setting\"\r\n                            onClick={this.showAction}\r\n                        >\r\n                            <i className=\"fas fa-cog\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    showAction = () => { //Show Action Components\r\n        const { showAction } = this.props;\r\n        showAction();\r\n    }\r\n    onChange = (e) => { //Bắt sự kiện onChange của ô thêm công việc\r\n        const { onChange } = this.props;\r\n        onChange(e.target.value);\r\n    }\r\n}\r\n\r\nexport default Add;","import React, { Component } from 'react';\r\nimport AddTodo from '../components/AddTodo';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nclass AddTodoContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { statusAction } = this.props;\r\n        const { name } = this.state;\r\n\r\n        return (\r\n            <AddTodo\r\n                statusAction={statusAction}\r\n                showAction={this.showAction}\r\n                onHandleAdd={this.onHandleAdd}\r\n                onReset={this.onReset}\r\n                onChange={this.onChange}\r\n                name={name}\r\n            />\r\n        );\r\n    }\r\n    onReset = () => {\r\n        this.setState({\r\n            name: ''\r\n        })\r\n    }\r\n    onHandleAdd = () => {\r\n        const { onHandleAdd } = this.props;\r\n        const { name } = this.state;\r\n        if (name.trim() !== '') {\r\n            onHandleAdd(name);\r\n            this.onReset()\r\n        }\r\n        // console.log(this.state);\r\n    }\r\n\r\n    showAction = () => {\r\n        const { showAction } = this.props;\r\n        showAction(false);\r\n        this.setState({\r\n            name: ''\r\n        })\r\n    }\r\n    onChange = (value) => { // Lấy dữ liệu ô Input thêm công việc\r\n        // console.log(value);\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        showAction: (statusAction) => {\r\n            dispatch(actions.changeStatusAction(statusAction));\r\n        },\r\n        onHandleAdd: (name) => {\r\n            dispatch(actions.addTodo(name))\r\n        }\r\n\r\n    }\r\n}\r\n// export default AddTodoContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoContainer);\r\n","import React, { Component } from 'react';\r\nimport ActionTodoContainer from '../containers/ActionTodoContainer';\r\nimport AddTodoContainer from '../containers/AddTodoContainer';\r\nclass Options extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"setting \">\r\n                <ActionTodoContainer />\r\n                <AddTodoContainer />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","import React, { Component } from 'react';\r\n\r\nclass CountComplete extends Component {\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.totalComplete) {\r\n            // this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { totalComplete } = this.props;\r\n        return (\r\n            <div className=\"count \">\r\n                <div className=\"count__content count--complete\">\r\n                    Đã hoàn thành:\r\n                    <span className=\"numb numb-complete\">\r\n                        {totalComplete}\r\n                    </span>\r\n                    <span className=\"bd border1\" />\r\n                    <span className=\"bd border2\" />\r\n                    <span className=\"bd border3\" />\r\n                    <span className=\"bd border4\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountComplete;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CountComplete from '../components/CountComplete';\r\n\r\nclass CountCompleteContainer extends Component {\r\n    totalComplete = () => {\r\n        const { dataTodos } = this.props;\r\n        return dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n    }\r\n    render() {\r\n        return (\r\n            <CountComplete totalComplete={this.totalComplete()} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n// export default CountCompleteContainer;\r\nexport default connect(mapStateToProps, null)(CountCompleteContainer);","import React, { Component } from 'react';\r\nimport CountCompleteContainer from '../containers/CountCompleteContainer';\r\n\r\nclass Counts extends Component {\r\n    count = (status) => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length <= 0) return;\r\n        if (status === true) {\r\n            return dataTodos.filter((dataTodo, index) => {\r\n                return dataTodo.status === true;\r\n            }).length\r\n        }\r\n        else if (status === false) {\r\n            return dataTodos.filter((dataTodo, index) => {\r\n                return dataTodo.status === false;\r\n            }).length;\r\n        }\r\n    }\r\n    progress = () => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length <= 0) return;\r\n        let total = dataTodos.length;\r\n        let complete = dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n        let notComplete = dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n        return Math.ceil((complete / total) * 100);\r\n    }\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n        return (\r\n            <div className=\"todos__footer\">\r\n                <div className=\"progress-bar\">\r\n                    <span className=\"progress-bar__name\">Tiến trình</span>\r\n                    <div className=\"progress-bar__percent\">\r\n                        <div className=\"percent\" style={{ width: this.progress() + '%' }}>{this.progress()}%</div>\r\n                    </div>\r\n                    <div className=\"progress-bar__value\">100%</div>\r\n                </div>\r\n                <div className=\"counts\">\r\n                    <div className=\"count \">\r\n                        <div className=\"count__content count--total\">\r\n                            Tổng cộng:\r\n        <span className=\"numb numb-total\">\r\n                                {\r\n                                    dataTodos.length\r\n                                }\r\n                            </span>\r\n                            <span className=\"bd border1\" />\r\n                            <span className=\"bd border2\" />\r\n                            <span className=\"bd border3\" />\r\n                            <span className=\"bd border4\" />\r\n                        </div>\r\n                    </div>\r\n                    <CountCompleteContainer />\r\n                    <div className=\"count\">\r\n                        <div className=\"count__content count--not-complete\">\r\n                            Chưa hoàn thành:\r\n                        <span className=\"numb numb-not-complete\">\r\n                                {\r\n                                    this.count(false) ? this.count(false) : 0\r\n                                }\r\n\r\n                            </span>\r\n                            <span className=\"bd border1\" />\r\n                            <span className=\"bd border2\" />\r\n                            <span className=\"bd border3\" />\r\n                            <span className=\"bd border4\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counts;","import React, { Component } from 'react';\r\nimport Counts from '../components/Counts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass CountsContainer extends Component {\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n        return (\r\n            <Counts dataTodos={dataTodos} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n\r\n// export default CountsContainer;\r\nexport default connect(mapStateToProps, null)(CountsContainer);\r\n","import React, { Component } from 'react';\r\n\r\nclass TodoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fieldName: '',\r\n            height: null,\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { dataTodo } = nextProps;\r\n        if (dataTodo) {\r\n            this.setState({\r\n                fieldName: dataTodo.name\r\n            })\r\n        }\r\n    }\r\n    toggleStatus = (id) => { //Bắt sự kiện click vào 1 Item để thay đổi trạng thái\r\n        const { toggleStatus } = this.props;\r\n        toggleStatus(id);\r\n    }\r\n    onDeleteTodo = (id) => { //Bắt sự kiện xóa 1 item\r\n        const { onDeleteTodo } = this.props;\r\n        onDeleteTodo(id);\r\n    }\r\n    onRepairTodo = (id, e) => { //Bắt sự kiện sửa 1 item có id trùng vs id truyền vào\r\n        const { onRepairTodo } = this.props;\r\n        const findTodosItemElem = () => {\r\n            var target = e.target;\r\n            while (target.parentElement) {\r\n                if (target.parentElement.className.indexOf('todos-item') !== -1) {\r\n                    return target.parentElement;\r\n                }\r\n                target = target.parentElement;\r\n            }\r\n        }\r\n        const height = findTodosItemElem().clientHeight + 5;\r\n        // console.log(height)\r\n        // console.log([findTodosItemElem()])\r\n        onRepairTodo(id);\r\n        this.setState({\r\n            height,\r\n        })\r\n        // console.log([e.target.parentElement.parentElement.parentElement.parentElement.parentElement.clientHeight])\r\n        // console.log(height);\r\n    }\r\n    onBack = () => {\r\n        const { onBack } = this.props;\r\n        onBack();\r\n    }\r\n    onInputValue = (e) => { //Lấy dữ liệu ô textarea ra set vào state\r\n        // console.log([e.target]);\r\n        let height = e.target.style.height\r\n        const scrollHeight = e.target.scrollHeight + 3\r\n        // console.log(height);\r\n        // console.log(scrollHeight);\r\n        this.setState({\r\n            fieldName: e.target.value,\r\n            height: scrollHeight\r\n        })\r\n    }\r\n    onUpdateTodo = (id) => {\r\n        const { onUpdateTodo } = this.props;\r\n        const { fieldName } = this.state;\r\n        onUpdateTodo({\r\n            id,\r\n            name: fieldName,\r\n        });\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        const { dataTodo } = this.props;\r\n        const { status } = dataTodo;\r\n\r\n        if (dataTodo) {\r\n\r\n            return (\r\n                <li className={status ? `todos-item mb-10 active-todos` : `todos-item mb-10`}>\r\n                    {\r\n                        this.renderItem()\r\n                    }\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n    onEnter = (e) => {\r\n        if (e.charCode === 13) {\r\n            e.preventDefault();\r\n        }\r\n        let height = e.target.style.height\r\n        const scrollHeight = e.target.scrollHeight + 5\r\n        // console.log(height);\r\n        // console.log(scrollHeight);\r\n        this.setState({\r\n            fieldName: e.target.value,\r\n            height: scrollHeight\r\n        })\r\n\r\n    }\r\n\r\n    renderItem = () => { // Render ra Item\r\n        const { dataTodo, idRepairTodo, stt } = this.props;\r\n        const { fieldName } = this.state;\r\n        const { id, name, status } = dataTodo;\r\n        // console.log(this.state.height)\r\n        if (idRepairTodo !== id) {\r\n            return (\r\n                <div className=\"todos-item-box\">\r\n                    <div\r\n                        className=\"todos__name \"\r\n                        onClick={() => this.toggleStatus(id)}\r\n                    >\r\n                        <span className={status ? \"icon-check icon--complete \" : \"icon-check icon--complete d-none\"}>\r\n                            <i className=\"fas fa-check\" />\r\n                        </span>\r\n                        <span className={!status ? \"icon-check icon--not-complete\" : \"icon-check icon--not-complete d-none\"}>\r\n                            <i className=\"fas fa-times\" />\r\n                        </span>\r\n                        <span className=\"todos__name-text\">\r\n                            {\r\n                                stt\r\n                            }\r\n                            <span className=\"dot\">. </span>\r\n                            {\r\n                                name\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"todos__options \">\r\n                        <span\r\n                            className={idRepairTodo === id ? \"icon-repair d-none\" : \"icon-repair\"}\r\n                            onClick={(e) => this.onRepairTodo(id, e)}\r\n                        >\r\n                            <i className=\"fas fa-edit\" style={{ pointerEvents: false }}\r\n                                onClick={this.stopPropagation}\r\n                            />\r\n                        </span>\r\n                        <span\r\n                            className={idRepairTodo === id ? \"icon-delete d-none\" : \"icon-delete \"}\r\n                            onClick={() => this.onDeleteTodo(id)}\r\n                        >\r\n                            <i className=\"fas fa-trash-alt\" />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (idRepairTodo === id) {\r\n            return (\r\n                <form\r\n                    className=\"todos-item-box\"\r\n                    onSubmit={this.onSubmit}\r\n                >\r\n                    <div className={idRepairTodo === id ? \"todos__name-repair \" : \"todos__name-repair d-none\"}>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            id=\"text-repair\"\r\n                            className=\"actions__input\"\r\n                            value={fieldName}\r\n                            onChange={this.onInputValue}\r\n                            onKeyPress={this.onEnter}\r\n                            style={{ height: this.state.height + 'px' }}\r\n                        />\r\n                    </div>\r\n                    <div className={idRepairTodo === id ? \"todos__options-repair \" : \"todos__options-repair  d-none\"}>\r\n                        <span\r\n                            className=\"icon-repair\"\r\n                            onClick={(e) => this.onUpdateTodo(id)}\r\n                        >\r\n                            <i className=\"fas fa-save\" />\r\n                        </span>\r\n                        <span\r\n                            className=\"icon-back\"\r\n                            onClick={() => this.onBack()}\r\n                        >\r\n                            <i className=\"fas fa-undo-alt\" />\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\n\r\nimport TodoItem from '../components/TodoItem';\r\nclass TodoItemContainer extends Component {\r\n    render() {\r\n        const { dataTodo, idRepairTodo, stt } = this.props;\r\n        return (\r\n            <TodoItem\r\n                dataTodo={dataTodo}\r\n                stt={stt}\r\n                toggleStatus={this.toggleStatus}\r\n                onDeleteTodo={this.onDeleteTodo}\r\n                onRepairTodo={this.onRepairTodo}\r\n                idRepairTodo={idRepairTodo}\r\n                onBack={this.onBack}\r\n                onUpdateTodo={this.onUpdateTodo}\r\n            />\r\n        );\r\n    }\r\n    toggleStatus = (id) => { //sự kiện thay đổi trạng thái hoàn thành hoặc chưa hoàn thành\r\n        const { toggleStatus } = this.props;\r\n        toggleStatus(id)\r\n    }\r\n    onDeleteTodo = (id) => { //Sự kiện xóa 1 todo item\r\n        const { handleDeleteTodo } = this.props;\r\n        handleDeleteTodo(id);\r\n    }\r\n    onRepairTodo = (id) => {\r\n        const { handleRepairTodo } = this.props;\r\n        handleRepairTodo(id);\r\n    }\r\n    onBack = () => {\r\n        const { onBack } = this.props;\r\n        onBack();\r\n    }\r\n    onUpdateTodo = (todo) => {\r\n        // console.log(todo)\r\n        const { handleUpdateTodo, onBack } = this.props;\r\n        if (todo.name.trim() !== '') {\r\n            handleUpdateTodo(todo);\r\n            onBack();\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction,\r\n        idRepairTodo: state.repairTodo,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        toggleStatus: (id) => {\r\n            dispatch(actions.toggleStatus(id));\r\n        },\r\n        handleDeleteTodo: (id) => {\r\n            dispatch(actions.deleteTodo(id));\r\n        },\r\n        handleRepairTodo: (id) => {\r\n            dispatch(actions.repairTodo(id));\r\n        },\r\n        onBack: () => {\r\n            dispatch(actions.repairTodo());\r\n        },\r\n        handleUpdateTodo: (todo) => {\r\n            dispatch(actions.updateTodo(todo));\r\n        }\r\n    }\r\n}\r\n// export default TodoItemContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoItemContainer from '../containers/TodoItemContainer';\r\n\r\nclass TodoList extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"todos__body mb-15\" >\r\n                <ul className=\"todos-list\">\r\n                    {\r\n                        this.renderTodosItem()\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    renderTodosItem = () => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length > 0) {\r\n            return dataTodos.map((dataTodo, index) => {\r\n                return (\r\n                    <TodoItemContainer\r\n                        key={dataTodo.id}\r\n                        stt={dataTodo.stt}\r\n                        dataTodo={dataTodo}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoList from '../components/TodoList';\r\n\r\nclass TodoListContainer extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const { keyword, statusSort } = this.props;\r\n        let { dataTodos } = this.props;\r\n        const dataTodosInit = [...dataTodos]\r\n\r\n        if (dataTodos) {\r\n            if (keyword.trim() !== '') { // Tìm kiếm \r\n                dataTodos = dataTodos.filter(item => {\r\n                    return item.name.trim().toLowerCase().indexOf(keyword.trim().toLowerCase()) !== -1;\r\n                })\r\n            }\r\n\r\n            if (statusSort === -1) {\r\n\r\n            }\r\n            if (statusSort === 0) {\r\n                dataTodos = dataTodosInit.sort((a, b) => {\r\n                    return a.status === b.status ? 0 : a.status ? 1 : -1;\r\n                })\r\n            }\r\n            if (statusSort === 1) {\r\n                dataTodos = dataTodosInit.sort((a, b) => {\r\n                    return a.status === b.status ? 0 : a.status ? -1 : 1;\r\n                })\r\n            }\r\n\r\n\r\n\r\n        }\r\n        return (\r\n            <TodoList\r\n                dataTodos={dataTodos}\r\n                keyword={keyword}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos,\r\n        keyword: state.search,\r\n        statusSort: state.sortTodo\r\n    }\r\n}\r\n// export default TodoItemContainer;\r\nexport default connect(mapStateToProps, null)(TodoListContainer);\r\n// export default TodoListContainer;","import React, { Component } from 'react';\nimport Options from './components/Options';\nimport CountsContainer from './containers/CountsContainer';\nimport TodoListContainer from './containers/TodoListContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"todos\">\n          <div className=\"todos__header\">\n            <h3 className=\"todos__header-text\">Todo List</h3>\n          </div>\n          <Options />\n          <TodoListContainer />\n          <CountsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as Types from '../constants/ActionTypes';\r\nvar dataLocal = JSON.parse(localStorage.getItem('dataTodos'));\r\n\r\nvar initialState = dataLocal || [];\r\nvar dataTodos = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.DATA_TODOS:\r\n            console.log(dataTodos);\r\n\r\n            return state;\r\n        case Types.ADD_TODO: //Thêm 1 công việc vào mảng\r\n            // console.log(action)\r\n            // state = false;\r\n            let newState = [...state];\r\n            const newTodo = {\r\n                stt: newState.length + 1,\r\n                id: Date.now(),\r\n                name: action.name,\r\n                status: false\r\n            }\r\n            newState.push(newTodo);\r\n            localStorage.setItem('dataTodos', JSON.stringify(newState));\r\n            return [...newState];\r\n        case Types.TOGGLE_STATUS:\r\n            let stateToggleStatus = [...state];\r\n            stateToggleStatus = stateToggleStatus.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        status: !item.status\r\n                    }\r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            // console.log(stateToggleStatus)\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateToggleStatus));\r\n            return stateToggleStatus;\r\n        case Types.DELETE_TODO:\r\n            let stateDel = [...state];\r\n            stateDel = stateDel.filter(item => item.id !== action.id);\r\n            stateDel = stateDel.map((item, index) => {\r\n                return {\r\n                    ...item,\r\n                    stt: index + 1\r\n                }\r\n            })\r\n\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateDel));\r\n            return [...stateDel];\r\n        case Types.UPDATE_TODO:\r\n            // console.log(action);\r\n            let stateUpdate = [...state];\r\n            stateUpdate = stateUpdate.map((item) => {\r\n                if (item.id === action.todo.id) {\r\n                    return {\r\n                        ...item,\r\n                        name: action.todo.name\r\n                    }\r\n                }\r\n                else return item;\r\n            })\r\n            // console.log(stateUpdate)\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateUpdate));\r\n\r\n            return [...stateUpdate];\r\n        case Types.SELECT_ALL:\r\n            var stateSelectAll = [...state];\r\n            if (action.statusSelect) {\r\n                stateSelectAll = stateSelectAll.map(item => {\r\n                    return {\r\n                        ...item,\r\n                        status: action.statusSelect\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                stateSelectAll = stateSelectAll.map(item => {\r\n                    return {\r\n                        ...item,\r\n                        status: false\r\n                    }\r\n                })\r\n            }\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateSelectAll));\r\n            return stateSelectAll;\r\n        case Types.DELETE_ALL:\r\n            const stateDelete = [];\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateDelete))\r\n            return [];\r\n        default: return [...state];\r\n    }\r\n    return state;\r\n}\r\nexport default dataTodos;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = null;\r\nvar statusAction = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.CHANGE_STATUS_ACTION:\r\n            // console.log(action)\r\n            // state = false;\r\n            return action.statusAction\r\n        default: return state;\r\n    }\r\n}\r\nexport default statusAction;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = null;\r\nvar repairTodo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.REPAIR_TODO:\r\n            // console.log(action)\r\n            // state = false;\r\n            if (action.id) {\r\n                return action.id;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\nexport default repairTodo;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = '';\r\nvar search = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SEARCH:\r\n            return action.name;\r\n        default: return state;\r\n    }\r\n}\r\nexport default search;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = -1; // state === -1 ? mặc định : state === 0 ? Chưa hoàn thành : state === 1 ? Hoàn thành \r\nvar sortTodo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SORT:\r\n            // console.log(action);\r\n            if (action.statusSort === -1) {\r\n                state = -1;\r\n            }\r\n            else {\r\n                state = state === 1 ? -1 : state + 1;\r\n            }\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\nexport default sortTodo;","import { combineReducers } from 'redux';\r\nimport dataTodos from './dataTodos';\r\nimport statusAction from './statusAction';\r\nimport repairTodo from './repairTodo';\r\nimport search from './search';\r\nimport sortTodo from './sortTodo';\r\nvar appReducer = combineReducers({\r\n    dataTodos,\r\n    statusAction,\r\n    repairTodo,\r\n    search,\r\n    sortTodo,\r\n})\r\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './reducers/reducers';\nconst store = createStore(appReducer);\nReactDOM.render(\n  <Provider store={store} >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}