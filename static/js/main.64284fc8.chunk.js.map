{"version":3,"sources":["components/ActionTodo.js","constants/ActionTypes.js","actions/actions.js","containers/ActionTodoContainer.js","components/AddTodo.js","containers/AddTodoContainer.js","components/Options.js","components/CountComplete.js","containers/CountCompleteContainer.js","components/Counts.js","containers/CountsContainer.js","components/TodoItem.js","containers/TodoItemContainer.js","components/TodoList.js","containers/TodoListContainer.js","App.js","reportWebVitals.js","reducers/dataTodos.js","reducers/statusAction.js","reducers/repairTodo.js","reducers/search.js","reducers/sortTodo.js","reducers/reducers.js","index.js"],"names":["ActionTodo","classStatusAction","statusAction","props","showAdd","onSearch","e","target","value","changeIcon","statusIcon","statusSort","this","keyword","onReset","onSort","className","type","placeholder","name","onChange","onClick","Component","CHANGE_STATUS_ACTION","ADD_TODO","TOGGLE_STATUS","DELETE_TODO","REPAIR_TODO","UPDATE_TODO","SEARCH","SORT","changeStatusAction","Types","repairTodo","id","search","ActionTodoContainer","onHandleReset","onHandleSearch","onHandleSort","dataTodos","connect","state","sortTodo","dispatch","actions","Add","classAddOption","onSubmit","preventDefault","showAction","onHandleAdd","autoFocus","AddTodoContainer","setState","trim","AddTodo","Options","CountComplete","nextProps","totalComplete","CountCompleteContainer","filter","dataTodo","status","length","Counts","count","index","progress","total","complete","Math","ceil","style","width","CountsContainer","TodoItem","toggleStatus","onDeleteTodo","onRepairTodo","height","parentElement","indexOf","findTodosItemElem","clientHeight","onBack","onInputValue","scrollHeight","fieldName","onUpdateTodo","onEnter","charCode","renderItem","idRepairTodo","pointerEvents","stopPropagation","onKeyPress","TodoItemContainer","handleDeleteTodo","handleRepairTodo","todo","handleUpdateTodo","TodoList","renderTodosItem","map","TodoListContainer","dataTodosInit","item","toLowerCase","console","log","sort","a","b","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","JSON","parse","localStorage","getItem","action","newState","newTodo","Date","now","push","setItem","stringify","stateToggleStatus","stateDel","stateUpdate","appReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64284fc8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ActionTodo extends Component {\r\n\r\n    classStatusAction = () => {\r\n        const { statusAction } = this.props;\r\n        if (statusAction === null) {\r\n            return \"actions\"\r\n        }\r\n        else if (statusAction) {\r\n            return \"actions hide-actions\";\r\n        }\r\n        else if (statusAction === false) {\r\n            return \"actions show-actions\";\r\n        }\r\n    }\r\n    showAdd = () => {\r\n        const { showAdd } = this.props;\r\n        showAdd();\r\n    }\r\n    onSearch = (e) => { //Bắt sự kiện onChange của ô tìm kiếm để lấy ra giá trị\r\n        const { onSearch } = this.props;\r\n        onSearch(e.target.value);\r\n    }\r\n    changeIcon = (statusIcon, statusSort) => {\r\n        if (statusIcon === statusSort) {\r\n            return '';\r\n        }\r\n        else {\r\n            return ' d-none';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props.statusAction)\r\n        const { keyword, onReset, onSort, statusSort } = this.props;\r\n        return (\r\n            <div className={this.classStatusAction()}>\r\n                <h3 className=\"setting__header\">\r\n                    Chức năng\r\n    </h3>\r\n                <div className=\"setting__body mb-10\">\r\n                    <div className=\"actions__input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"actions__input\"\r\n                            placeholder=\"Tìm kiếm...\"\r\n                            name=\"fieldSearch\"\r\n                            value={keyword}\r\n                            onChange={this.onSearch}\r\n                        />\r\n                        <span\r\n                            className=\"icon-reset\"\r\n                            onClick={onReset}\r\n                        >\r\n                            <i className=\"fas fa-eraser\" />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"actions__btn\">\r\n                        <button\r\n                            className=\"btn btn--back btn--add\"\r\n                            onClick={this.showAdd}\r\n                        >\r\n                            <i className=\"fas fa-plus-square\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"setting__menu\">\r\n                    <li className=\"setting__menu-item\">\r\n                        <button\r\n                            className=\"btn btn--sort\"\r\n                            onClick={onSort}\r\n                        >\r\n                            <span\r\n                                className=\"btn-text\"\r\n                            >\r\n                                Sắp xếp\r\n          </span>\r\n                            <span className={\"icon-check icon-sort \" + this.changeIcon(-1, statusSort)}>\r\n                                <i className=\"fas fa-sort\" />\r\n                            </span>\r\n\r\n                            <span className={\"icon-check icon-sort icon--not-complete \" + this.changeIcon(0, statusSort)}>\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                            <span className={\"icon-check icon-sort icon--complete \" + this.changeIcon(1, statusSort)}>\r\n                                <i className=\"fas fa-check\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"setting__menu-item\">\r\n                        <button className=\"btn btn--mark-complete\">\r\n                            <div className=\"btn-text\">\r\n                                Chọn tất cả\r\n          </div>\r\n                            <span className=\"icon-check icon-mark icon--complete \">\r\n                                <i className=\"fas fa-check\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"setting__menu-item\">\r\n                        <button className=\"btn btn--mark-not-complete\">\r\n                            Chọn tất cả\r\n          <span className=\"icon-check icon-mark icon--not-complete\">\r\n                                <i className=\"fas fa-times\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                    <li className=\"setting__menu-item\">\r\n                        <button className=\"btn btn--delete-all\">\r\n                            Xóa tất cả\r\n          <span className=\"icon-check icon-delete-all\">\r\n                                <i className=\"fas fa-trash\" />\r\n                            </span>\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActionTodo;","export const DATA_TODOS = 'DATA_TODOS';\r\nexport const CHANGE_STATUS_ACTION = 'CHANGE_STATUS_ACTION';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const TOTAL_COMPLETE = 'TOTAL_COMPLETE';\r\nexport const TOGGLE_STATUS = 'TOGGLE_STATUS';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const REPAIR_TODO = 'REPAIR_TODO';\r\nexport const UPDATE_TODO = 'UPDATE_TODO';\r\nexport const SEARCH = 'SEARCH';\r\nexport const SORT = 'SORT';\r\n\r\n","import * as Types from '../constants/ActionTypes';\r\nexport const dataTodos = () => {\r\n    return {\r\n        type: Types.DATA_TODOS\r\n\r\n    }\r\n}\r\nexport const changeStatusAction = (statusAction) => {\r\n    return {\r\n        type: Types.CHANGE_STATUS_ACTION,\r\n        statusAction\r\n    }\r\n}\r\nexport const addTodo = (name) => {\r\n    return {\r\n        type: Types.ADD_TODO,\r\n        name\r\n    }\r\n}\r\nexport const totalComplete = (status) => {\r\n    return {\r\n        type: Types.TOTAL_COMPLETE,\r\n        status\r\n    }\r\n}\r\nexport const toggleStatus = (id) => {\r\n    return {\r\n        type: Types.TOGGLE_STATUS,\r\n        id\r\n    }\r\n}\r\nexport const deleteTodo = (id) => {\r\n    return {\r\n        type: Types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\nexport const repairTodo = (id) => {\r\n    return {\r\n        type: Types.REPAIR_TODO,\r\n        id\r\n    }\r\n}\r\nexport const updateTodo = (todo) => {\r\n    return {\r\n        type: Types.UPDATE_TODO,\r\n        todo\r\n    }\r\n}\r\nexport const search = (name) => {\r\n    return {\r\n        type: Types.SEARCH,\r\n        name\r\n    }\r\n}\r\n\r\nexport const sortTodo = (statusSort) => {\r\n    return {\r\n        type: Types.SORT,\r\n        statusSort\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport ActionTodo from '../components/ActionTodo';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nclass ActionTodoContainer extends Component {\r\n\r\n    render() {\r\n        const { statusAction, keyword, statusSort, dataTodos } = this.props;\r\n        // console.log(dataTodos);\r\n\r\n        return (\r\n            <ActionTodo\r\n                showAdd={this.showAdd}\r\n                statusAction={statusAction}\r\n                onSearch={this.onSearch}\r\n                keyword={keyword}\r\n                onReset={this.onReset}\r\n                onSort={this.onSort}\r\n                statusSort={statusSort}\r\n            />\r\n        );\r\n    }\r\n    showAdd = () => { //Show Add Todo Component\r\n        const { showAdd, onHandleReset } = this.props;\r\n        showAdd(true);\r\n        onHandleReset()\r\n    }\r\n    onSearch = (value) => {\r\n        const { onHandleSearch } = this.props;\r\n        onHandleSearch(value)\r\n    }\r\n    onReset = () => {\r\n        const { onHandleReset } = this.props;\r\n        onHandleReset()\r\n    }\r\n    onSort = () => {\r\n        const { onHandleSort } = this.props;\r\n        onHandleSort()\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction,\r\n        keyword: state.search,\r\n        statusSort: state.sortTodo,\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        showAdd: (statusAction) => {\r\n            dispatch(actions.changeStatusAction(statusAction));\r\n        },\r\n        onHandleSearch: (name) => {\r\n            dispatch(actions.search(name))\r\n        },\r\n        onHandleReset: () => {\r\n            dispatch(actions.search(''))\r\n        },\r\n        onHandleSort: () => {\r\n            dispatch(actions.sortTodo());\r\n        }\r\n\r\n    }\r\n}\r\n// export default ActionTodoContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActionTodoContainer);\r\n","import React, { Component } from 'react';\r\n\r\nclass Add extends Component {\r\n    classAddOption = () => { //Show Add Action\r\n        const { statusAction } = this.props;\r\n        if (statusAction === null) {\r\n            return \"add\"\r\n        }\r\n        else if (statusAction) {\r\n            return \"add show-add\";\r\n        }\r\n        else if (statusAction === false) {\r\n            return \"add hide-add\";\r\n        }\r\n    }\r\n    render() {\r\n        const { onHandleAdd, name, onReset } = this.props;\r\n        return (\r\n            <div className={this.classAddOption()}>\r\n                <h3 className=\"setting__header\">\r\n                    Thêm công việc\r\n    </h3>\r\n                <form\r\n                    className=\"setting__body\"\r\n                    onSubmit={this.onSubmit}\r\n                >\r\n                    <div className=\"add__input-box\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"add__input\"\r\n                            placeholder=\"Thêm công việc...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            autoFocus\r\n                        />\r\n                        <span className=\"icon-reset\"\r\n                            onClick={onReset}\r\n\r\n                        >\r\n                            <i className=\"fas fa-eraser\" />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"add__btn\">\r\n                        <button\r\n                            className=\"btn btn--glowing-gradient btn--add\"\r\n                            onClick={onHandleAdd}\r\n                        >\r\n                            <i className=\"fas fa-plus-circle\" />\r\n          Thêm\r\n        </button>\r\n                        <button\r\n                            className=\"btn btn--setting\"\r\n                            onClick={this.showAction}\r\n                        >\r\n                            <i className=\"fas fa-cog\" />\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    showAction = () => { //Show Action Components\r\n        const { showAction } = this.props;\r\n        showAction();\r\n    }\r\n    onChange = (e) => { //Bắt sự kiện onChange của ô thêm công việc\r\n        const { onChange } = this.props;\r\n        onChange(e.target.value);\r\n    }\r\n}\r\n\r\nexport default Add;","import React, { Component } from 'react';\r\nimport AddTodo from '../components/AddTodo';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\nclass AddTodoContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { statusAction } = this.props;\r\n        const { name } = this.state;\r\n\r\n        return (\r\n            <AddTodo\r\n                statusAction={statusAction}\r\n                showAction={this.showAction}\r\n                onHandleAdd={this.onHandleAdd}\r\n                onReset={this.onReset}\r\n                onChange={this.onChange}\r\n                name={name}\r\n            />\r\n        );\r\n    }\r\n    onReset = () => {\r\n        this.setState({\r\n            name: ''\r\n        })\r\n    }\r\n    onHandleAdd = () => {\r\n        const { onHandleAdd } = this.props;\r\n        const { name } = this.state;\r\n        if (name.trim() !== '') {\r\n            onHandleAdd(name);\r\n            this.onReset()\r\n        }\r\n        // console.log(this.state);\r\n    }\r\n\r\n    showAction = () => {\r\n        const { showAction } = this.props;\r\n        showAction(false);\r\n        this.setState({\r\n            name: ''\r\n        })\r\n    }\r\n    onChange = (value) => { // Lấy dữ liệu ô Input thêm công việc\r\n        // console.log(value);\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        showAction: (statusAction) => {\r\n            dispatch(actions.changeStatusAction(statusAction));\r\n        },\r\n        onHandleAdd: (name) => {\r\n            dispatch(actions.addTodo(name))\r\n        }\r\n\r\n    }\r\n}\r\n// export default AddTodoContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoContainer);\r\n","import React, { Component } from 'react';\r\nimport ActionTodoContainer from '../containers/ActionTodoContainer';\r\nimport AddTodoContainer from '../containers/AddTodoContainer';\r\nclass Options extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"setting \">\r\n                <ActionTodoContainer />\r\n                <AddTodoContainer />\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","import React, { Component } from 'react';\r\n\r\nclass CountComplete extends Component {\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.totalComplete) {\r\n            // this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { totalComplete } = this.props;\r\n        return (\r\n            <div className=\"count \">\r\n                <div className=\"count__content count--complete\">\r\n                    Đã hoàn thành:\r\n                    <span className=\"numb numb-complete\">\r\n                        {totalComplete}\r\n                    </span>\r\n                    <span className=\"bd border1\" />\r\n                    <span className=\"bd border2\" />\r\n                    <span className=\"bd border3\" />\r\n                    <span className=\"bd border4\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountComplete;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CountComplete from '../components/CountComplete';\r\n\r\nclass CountCompleteContainer extends Component {\r\n    totalComplete = () => {\r\n        const { dataTodos } = this.props;\r\n        return dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n    }\r\n    render() {\r\n        return (\r\n            <CountComplete totalComplete={this.totalComplete()} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n// export default CountCompleteContainer;\r\nexport default connect(mapStateToProps, null)(CountCompleteContainer);","import React, { Component } from 'react';\r\nimport CountCompleteContainer from '../containers/CountCompleteContainer';\r\n\r\nclass Counts extends Component {\r\n    count = (status) => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length <= 0) return;\r\n        if (status === true) {\r\n            return dataTodos.filter((dataTodo, index) => {\r\n                return dataTodo.status === true;\r\n            }).length\r\n        }\r\n        else if (status === false) {\r\n            return dataTodos.filter((dataTodo, index) => {\r\n                return dataTodo.status === false;\r\n            }).length;\r\n        }\r\n    }\r\n    progress = () => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length <= 0) return;\r\n        let total = dataTodos.length;\r\n        let complete = dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n        let notComplete = dataTodos.filter(dataTodo => dataTodo.status === true).length;\r\n        return Math.ceil((complete / total) * 100);\r\n    }\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n        return (\r\n            <div className=\"todos__footer\">\r\n                <div className=\"progress-bar\">\r\n                    <span className=\"progress-bar__name\">Tiến trình</span>\r\n                    <div className=\"progress-bar__percent\">\r\n                        <div className=\"percent\" style={{ width: this.progress() + '%' }}>{this.progress()}%</div>\r\n                    </div>\r\n                    <div className=\"progress-bar__value\">100%</div>\r\n                </div>\r\n                <div className=\"counts\">\r\n                    <div className=\"count \">\r\n                        <div className=\"count__content count--total\">\r\n                            Tổng cộng:\r\n        <span className=\"numb numb-total\">\r\n                                {\r\n                                    dataTodos.length\r\n                                }\r\n                            </span>\r\n                            <span className=\"bd border1\" />\r\n                            <span className=\"bd border2\" />\r\n                            <span className=\"bd border3\" />\r\n                            <span className=\"bd border4\" />\r\n                        </div>\r\n                    </div>\r\n                    <CountCompleteContainer />\r\n                    <div className=\"count\">\r\n                        <div className=\"count__content count--not-complete\">\r\n                            Chưa hoàn thành:\r\n                        <span className=\"numb numb-not-complete\">\r\n                                {\r\n                                    this.count(false) ? this.count(false) : 0\r\n                                }\r\n\r\n                            </span>\r\n                            <span className=\"bd border1\" />\r\n                            <span className=\"bd border2\" />\r\n                            <span className=\"bd border3\" />\r\n                            <span className=\"bd border4\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counts;","import React, { Component } from 'react';\r\nimport Counts from '../components/Counts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass CountsContainer extends Component {\r\n    render() {\r\n        const { dataTodos } = this.props;\r\n        return (\r\n            <Counts dataTodos={dataTodos} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos\r\n    }\r\n}\r\n\r\n// export default CountsContainer;\r\nexport default connect(mapStateToProps, null)(CountsContainer);\r\n","import React, { Component } from 'react';\r\n\r\nclass TodoItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fieldName: '',\r\n            height: null,\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const { dataTodo } = nextProps;\r\n        if (dataTodo) {\r\n            this.setState({\r\n                fieldName: dataTodo.name\r\n            })\r\n        }\r\n    }\r\n    toggleStatus = (id) => { //Bắt sự kiện click vào 1 Item để thay đổi trạng thái\r\n        const { toggleStatus } = this.props;\r\n        toggleStatus(id);\r\n    }\r\n    onDeleteTodo = (id) => { //Bắt sự kiện xóa 1 item\r\n        const { onDeleteTodo } = this.props;\r\n        onDeleteTodo(id);\r\n    }\r\n    onRepairTodo = (id, e) => { //Bắt sự kiện sửa 1 item có id trùng vs id truyền vào\r\n        const { onRepairTodo } = this.props;\r\n        const findTodosItemElem = () => {\r\n            var target = e.target;\r\n            while (target.parentElement) {\r\n                if (target.parentElement.className.indexOf('todos-item') !== -1) {\r\n                    return target.parentElement;\r\n                }\r\n                target = target.parentElement;\r\n            }\r\n        }\r\n        const height = findTodosItemElem().clientHeight + 5;\r\n        // console.log(height)\r\n        // console.log([findTodosItemElem()])\r\n        onRepairTodo(id);\r\n        this.setState({\r\n            height,\r\n        })\r\n        // console.log([e.target.parentElement.parentElement.parentElement.parentElement.parentElement.clientHeight])\r\n        // console.log(height);\r\n    }\r\n    onBack = () => {\r\n        const { onBack } = this.props;\r\n        onBack();\r\n    }\r\n    onInputValue = (e) => { //Lấy dữ liệu ô textarea ra set vào state\r\n        // console.log([e.target]);\r\n        let height = e.target.style.height\r\n        const scrollHeight = e.target.scrollHeight + 3\r\n        // console.log(height);\r\n        // console.log(scrollHeight);\r\n        this.setState({\r\n            fieldName: e.target.value,\r\n            height: scrollHeight\r\n        })\r\n    }\r\n    onUpdateTodo = (id) => {\r\n        const { onUpdateTodo } = this.props;\r\n        const { fieldName } = this.state;\r\n        onUpdateTodo({\r\n            id,\r\n            name: fieldName,\r\n        });\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    render() {\r\n        const { dataTodo } = this.props;\r\n        const { status } = dataTodo;\r\n        if (dataTodo) {\r\n\r\n            return (\r\n                <li className={status ? `todos-item mb-10 active-todos` : `todos-item mb-10`}>\r\n\r\n                    {\r\n                        this.renderItem()\r\n                    }\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n    onEnter = (e) => {\r\n        if (e.charCode === 13) {\r\n            e.preventDefault();\r\n        }\r\n        let height = e.target.style.height\r\n        const scrollHeight = e.target.scrollHeight + 5\r\n        // console.log(height);\r\n        // console.log(scrollHeight);\r\n        this.setState({\r\n            fieldName: e.target.value,\r\n            height: scrollHeight\r\n        })\r\n\r\n    }\r\n\r\n    renderItem = () => { // Render ra Item\r\n        const { dataTodo, idRepairTodo } = this.props;\r\n        const { fieldName } = this.state;\r\n        const { id, name, status } = dataTodo;\r\n        // console.log(this.state.height)\r\n        if (idRepairTodo !== id) {\r\n            return (\r\n                <div className=\"todos-item-box\">\r\n                    <div\r\n                        className=\"todos__name \"\r\n                        onClick={() => this.toggleStatus(id)}\r\n                    >\r\n                        <span className={status ? \"icon-check icon--complete \" : \"icon-check icon--complete d-none\"}>\r\n                            <i className=\"fas fa-check\" />\r\n                        </span>\r\n                        <span className={!status ? \"icon-check icon--not-complete\" : \"icon-check icon--not-complete d-none\"}>\r\n                            <i className=\"fas fa-times\" />\r\n                        </span>\r\n                        <span className=\"todos__name-text\">\r\n                            {\r\n                                name\r\n                            }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"todos__options \">\r\n                        <span\r\n                            className={idRepairTodo === id ? \"icon-repair d-none\" : \"icon-repair\"}\r\n                            onClick={(e) => this.onRepairTodo(id, e)}\r\n                        >\r\n                            <i className=\"fas fa-edit\" style={{ pointerEvents: false }}\r\n                                onClick={this.stopPropagation}\r\n                            />\r\n                        </span>\r\n                        <span\r\n                            className={idRepairTodo === id ? \"icon-delete d-none\" : \"icon-delete \"}\r\n                            onClick={() => this.onDeleteTodo(id)}\r\n                        >\r\n                            <i className=\"fas fa-trash-alt\" />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (idRepairTodo === id) {\r\n            return (\r\n                <form\r\n                    className=\"todos-item-box\"\r\n                    onSubmit={this.onSubmit}\r\n                >\r\n                    <div className={idRepairTodo === id ? \"todos__name-repair \" : \"todos__name-repair d-none\"}>\r\n                        <textarea\r\n                            type=\"text\"\r\n                            id=\"text-repair\"\r\n                            className=\"actions__input\"\r\n                            value={fieldName}\r\n                            onChange={this.onInputValue}\r\n                            onKeyPress={this.onEnter}\r\n                            style={{ height: this.state.height + 'px' }}\r\n                        />\r\n                    </div>\r\n                    <div className={idRepairTodo === id ? \"todos__options-repair \" : \"todos__options-repair  d-none\"}>\r\n                        <span\r\n                            className=\"icon-repair\"\r\n                            onClick={(e) => this.onUpdateTodo(id)}\r\n                        >\r\n                            <i className=\"fas fa-save\" />\r\n                        </span>\r\n                        <span\r\n                            className=\"icon-back\"\r\n                            onClick={() => this.onBack()}\r\n                        >\r\n                            <i className=\"fas fa-undo-alt\" />\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../actions/actions';\r\n\r\nimport TodoItem from '../components/TodoItem';\r\nclass TodoItemContainer extends Component {\r\n    render() {\r\n        const { dataTodo, idRepairTodo, keyword } = this.props;\r\n        return (\r\n            <TodoItem\r\n                dataTodo={dataTodo}\r\n                toggleStatus={this.toggleStatus}\r\n                onDeleteTodo={this.onDeleteTodo}\r\n                onRepairTodo={this.onRepairTodo}\r\n                idRepairTodo={idRepairTodo}\r\n                onBack={this.onBack}\r\n                onUpdateTodo={this.onUpdateTodo}\r\n            />\r\n        );\r\n    }\r\n    toggleStatus = (id) => { //sự kiện thay đổi trạng thái hoàn thành hoặc chưa hoàn thành\r\n        const { toggleStatus } = this.props;\r\n        toggleStatus(id)\r\n    }\r\n    onDeleteTodo = (id) => { //Sự kiện xóa 1 todo item\r\n        const { handleDeleteTodo } = this.props;\r\n        handleDeleteTodo(id);\r\n    }\r\n    onRepairTodo = (id) => {\r\n        const { handleRepairTodo } = this.props;\r\n        handleRepairTodo(id);\r\n    }\r\n    onBack = () => {\r\n        const { onBack } = this.props;\r\n        onBack();\r\n    }\r\n    onUpdateTodo = (todo) => {\r\n        // console.log(todo)\r\n        const { handleUpdateTodo, onBack } = this.props;\r\n        if (todo.name.trim() !== '') {\r\n            handleUpdateTodo(todo);\r\n            onBack();\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        statusAction: state.statusAction,\r\n        idRepairTodo: state.repairTodo,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        toggleStatus: (id) => {\r\n            dispatch(actions.toggleStatus(id));\r\n        },\r\n        handleDeleteTodo: (id) => {\r\n            dispatch(actions.deleteTodo(id));\r\n        },\r\n        handleRepairTodo: (id) => {\r\n            dispatch(actions.repairTodo(id));\r\n        },\r\n        onBack: () => {\r\n            dispatch(actions.repairTodo());\r\n        },\r\n        handleUpdateTodo: (todo) => {\r\n            dispatch(actions.updateTodo(todo));\r\n        }\r\n    }\r\n}\r\n// export default TodoItemContainer;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoItemContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoItemContainer from '../containers/TodoItemContainer';\r\n\r\nclass TodoList extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"todos__body mb-15\" >\r\n                <ul className=\"todos-list\">\r\n                    {\r\n                        this.renderTodosItem()\r\n                    }\r\n\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    renderTodosItem = () => {\r\n        const { dataTodos } = this.props;\r\n        if (dataTodos.length > 0) {\r\n            return dataTodos.map((dataTodo, index) => {\r\n                return (\r\n                    <TodoItemContainer\r\n                        key={dataTodo.id}\r\n                        dataTodo={dataTodo}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default TodoList;\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoList from '../components/TodoList';\r\n\r\nclass TodoListContainer extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const { keyword, statusSort } = this.props;\r\n        let { dataTodos } = this.props;\r\n        const dataTodosInit = [...dataTodos]\r\n        if (dataTodos) {\r\n            if (keyword.trim() !== '') { // Tìm kiếm \r\n                dataTodos = dataTodos.filter(item => {\r\n                    return item.name.trim().toLowerCase().indexOf(keyword.trim().toLowerCase()) !== -1;\r\n                })\r\n            }\r\n\r\n            if (statusSort === -1) {\r\n                console.log(dataTodos)\r\n            }\r\n            if (statusSort === 0) {\r\n                dataTodos = dataTodosInit.sort((a, b) => {\r\n                    return a.status === b.status ? 0 : a.status ? 1 : -1;\r\n                })\r\n            }\r\n            if (statusSort === 1) {\r\n                dataTodos = dataTodosInit.sort((a, b) => {\r\n                    return a.status === b.status ? 0 : a.status ? -1 : 1;\r\n                })\r\n            }\r\n\r\n\r\n\r\n        }\r\n        return (\r\n            <TodoList\r\n                dataTodos={dataTodos}\r\n                keyword={keyword}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataTodos: state.dataTodos,\r\n        keyword: state.search,\r\n        statusSort: state.sortTodo\r\n    }\r\n}\r\n// export default TodoItemContainer;\r\nexport default connect(mapStateToProps, null)(TodoListContainer);\r\n// export default TodoListContainer;","import React, { Component } from 'react';\nimport Options from './components/Options';\nimport CountsContainer from './containers/CountsContainer';\nimport TodoListContainer from './containers/TodoListContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"todos\">\n          <div className=\"todos__header\">\n            <h3 className=\"todos__header-text\">Todo List</h3>\n          </div>\n          <Options />\n          <TodoListContainer />\n          <CountsContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as Types from '../constants/ActionTypes';\r\nvar dataLocal = JSON.parse(localStorage.getItem('dataTodos'));\r\n\r\nvar initialState = dataLocal || [];\r\nvar dataTodos = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.ADD_TODO: //Thêm 1 công việc vào mảng\r\n            // console.log(action)\r\n            // state = false;\r\n            let newState = [...state];\r\n            const newTodo = {\r\n                id: Date.now(),\r\n                name: action.name,\r\n                status: false\r\n            }\r\n            newState.push(newTodo);\r\n            localStorage.setItem('dataTodos', JSON.stringify(newState));\r\n            return [...newState];\r\n        case Types.TOGGLE_STATUS:\r\n            let stateToggleStatus = [...state];\r\n            stateToggleStatus = stateToggleStatus.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {\r\n                        ...item,\r\n                        status: !item.status\r\n                    }\r\n                }\r\n                else {\r\n                    return item;\r\n                }\r\n            })\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateToggleStatus));\r\n            return stateToggleStatus;\r\n        case Types.DELETE_TODO:\r\n            let stateDel = [...state];\r\n            stateDel = stateDel.filter(item => item.id !== action.id);\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateDel));\r\n            return [...stateDel];\r\n        case Types.UPDATE_TODO:\r\n            // console.log(action);\r\n            let stateUpdate = [...state];\r\n            stateUpdate = stateUpdate.map(item => {\r\n                if (item.id === action.todo.id) {\r\n                    return {\r\n                        ...item,\r\n                        name: action.todo.name\r\n                    }\r\n                }\r\n                else return item;\r\n            })\r\n            // console.log(stateUpdate)\r\n            localStorage.setItem('dataTodos', JSON.stringify(stateUpdate));\r\n\r\n            return [...stateUpdate];\r\n\r\n        default: return [...state];\r\n    }\r\n}\r\nexport default dataTodos;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = null;\r\nvar statusAction = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.CHANGE_STATUS_ACTION:\r\n            // console.log(action)\r\n            // state = false;\r\n            return action.statusAction\r\n        default: return state;\r\n    }\r\n}\r\nexport default statusAction;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = null;\r\nvar repairTodo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.REPAIR_TODO:\r\n            // console.log(action)\r\n            // state = false;\r\n            if (action.id) {\r\n                return action.id;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\nexport default repairTodo;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = '';\r\nvar search = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SEARCH:\r\n            return action.name;\r\n        default: return state;\r\n    }\r\n}\r\nexport default search;","import * as Types from '../constants/ActionTypes';\r\nvar initialState = -1; // state === -1 ? mặc định : state === 0 ? Chưa hoàn thành : state === 1 ? Hoàn thành \r\nvar sortTodo = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.SORT:\r\n            state = state === 1 ? -1 : state + 1;\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\nexport default sortTodo;","import { combineReducers } from 'redux';\r\nimport dataTodos from './dataTodos';\r\nimport statusAction from './statusAction';\r\nimport repairTodo from './repairTodo';\r\nimport search from './search';\r\nimport sortTodo from './sortTodo';\r\nvar appReducer = combineReducers({\r\n    dataTodos,\r\n    statusAction,\r\n    repairTodo,\r\n    search,\r\n    sortTodo,\r\n})\r\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './reducers/reducers';\nconst store = createStore(appReducer);\nReactDOM.render(\n  <Provider store={store} >\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}